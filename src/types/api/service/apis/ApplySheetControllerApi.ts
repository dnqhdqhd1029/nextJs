/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BaseResponseCommonString,
  CreateApplySheetDemoForNoUserDto,
  CreateApplySheetSalesForNoUserDto,
  CreateApplySheetSalesForUserDto,
} from '../models/index';
import {
    BaseResponseCommonStringFromJSON,
    BaseResponseCommonStringToJSON,
    CreateApplySheetDemoForNoUserDtoFromJSON,
    CreateApplySheetDemoForNoUserDtoToJSON,
    CreateApplySheetSalesForNoUserDtoFromJSON,
    CreateApplySheetSalesForNoUserDtoToJSON,
    CreateApplySheetSalesForUserDtoFromJSON,
    CreateApplySheetSalesForUserDtoToJSON,
} from '../models/index';

export interface AddApplySheetDemoForNoUserRequest {
    createApplySheetDemoForNoUserDto: CreateApplySheetDemoForNoUserDto;
}

export interface AddApplySheetSalesForNoUserRequest {
    createApplySheetSalesForNoUserDto: CreateApplySheetSalesForNoUserDto;
}

export interface AddApplySheetSalesForUserRequest {
    createApplySheetSalesForUserDto: CreateApplySheetSalesForUserDto;
}

/**
 * 
 */
export class ApplySheetControllerApi extends runtime.BaseAPI {

    /**
     * 데모 신청(비회원용) - 데모신청은 비회원으로만 요청
     * 데모 신청(비회원용)
     */
    async addApplySheetDemoForNoUserRaw(requestParameters: AddApplySheetDemoForNoUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BaseResponseCommonString>> {
        if (requestParameters['createApplySheetDemoForNoUserDto'] == null) {
            throw new runtime.RequiredError(
                'createApplySheetDemoForNoUserDto',
                'Required parameter "createApplySheetDemoForNoUserDto" was null or undefined when calling addApplySheetDemoForNoUser().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("accessToken", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/svc/nouser/demo`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateApplySheetDemoForNoUserDtoToJSON(requestParameters['createApplySheetDemoForNoUserDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BaseResponseCommonStringFromJSON(jsonValue));
    }

    /**
     * 데모 신청(비회원용) - 데모신청은 비회원으로만 요청
     * 데모 신청(비회원용)
     */
    async addApplySheetDemoForNoUser(requestParameters: AddApplySheetDemoForNoUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BaseResponseCommonString> {
        const response = await this.addApplySheetDemoForNoUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 구매 상담 추가(비회원용)
     * 구매 상담 추가(비회원용)
     */
    async addApplySheetSalesForNoUserRaw(requestParameters: AddApplySheetSalesForNoUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BaseResponseCommonString>> {
        if (requestParameters['createApplySheetSalesForNoUserDto'] == null) {
            throw new runtime.RequiredError(
                'createApplySheetSalesForNoUserDto',
                'Required parameter "createApplySheetSalesForNoUserDto" was null or undefined when calling addApplySheetSalesForNoUser().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("accessToken", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/svc/nouser/sales`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateApplySheetSalesForNoUserDtoToJSON(requestParameters['createApplySheetSalesForNoUserDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BaseResponseCommonStringFromJSON(jsonValue));
    }

    /**
     * 구매 상담 추가(비회원용)
     * 구매 상담 추가(비회원용)
     */
    async addApplySheetSalesForNoUser(requestParameters: AddApplySheetSalesForNoUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BaseResponseCommonString> {
        const response = await this.addApplySheetSalesForNoUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 구매 신청 요청(회원용)
     * 구매 신청 요청(회원용)
     */
    async addApplySheetSalesForUserRaw(requestParameters: AddApplySheetSalesForUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BaseResponseCommonString>> {
        if (requestParameters['createApplySheetSalesForUserDto'] == null) {
            throw new runtime.RequiredError(
                'createApplySheetSalesForUserDto',
                'Required parameter "createApplySheetSalesForUserDto" was null or undefined when calling addApplySheetSalesForUser().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("accessToken", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/svc/applysheet/sales`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateApplySheetSalesForUserDtoToJSON(requestParameters['createApplySheetSalesForUserDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BaseResponseCommonStringFromJSON(jsonValue));
    }

    /**
     * 구매 신청 요청(회원용)
     * 구매 신청 요청(회원용)
     */
    async addApplySheetSalesForUser(requestParameters: AddApplySheetSalesForUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BaseResponseCommonString> {
        const response = await this.addApplySheetSalesForUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
