/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserDtoForSimple } from './UserDtoForSimple';
import {
    UserDtoForSimpleFromJSON,
    UserDtoForSimpleFromJSONTyped,
    UserDtoForSimpleToJSON,
} from './UserDtoForSimple';

/**
 * 
 * @export
 * @interface MediaListDto
 */
export interface MediaListDto {
    /**
     * 
     * @type {number}
     * @memberof MediaListDto
     */
    mediaListId?: number;
    /**
     * 
     * @type {string}
     * @memberof MediaListDto
     */
    title?: string;
    /**
     * 
     * @type {number}
     * @memberof MediaListDto
     */
    groupId?: number;
    /**
     * 
     * @type {number}
     * @memberof MediaListDto
     */
    projectId?: number;
    /**
     * 
     * @type {string}
     * @memberof MediaListDto
     */
    shareCode?: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof MediaListDto
     */
    media?: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof MediaListDto
     */
    mediaCount?: number;
    /**
     * 
     * @type {number}
     * @memberof MediaListDto
     */
    emailCount?: number;
    /**
     * 
     * @type {UserDtoForSimple}
     * @memberof MediaListDto
     */
    owner?: UserDtoForSimple;
    /**
     * 
     * @type {UserDtoForSimple}
     * @memberof MediaListDto
     */
    register?: UserDtoForSimple;
    /**
     * 
     * @type {UserDtoForSimple}
     * @memberof MediaListDto
     */
    updater?: UserDtoForSimple;
    /**
     * 
     * @type {UserDtoForSimple}
     * @memberof MediaListDto
     */
    cuUser?: UserDtoForSimple;
    /**
     * 
     * @type {string}
     * @memberof MediaListDto
     */
    cuType?: string;
    /**
     * 
     * @type {Date}
     * @memberof MediaListDto
     */
    regisAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof MediaListDto
     */
    updateAt?: Date;
}

/**
 * Check if a given object implements the MediaListDto interface.
 */
export function instanceOfMediaListDto(value: object): value is MediaListDto {
    return true;
}

export function MediaListDtoFromJSON(json: any): MediaListDto {
    return MediaListDtoFromJSONTyped(json, false);
}

export function MediaListDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaListDto {
    if (json == null) {
        return json;
    }
    return {
        
        'mediaListId': json['mediaListId'] == null ? undefined : json['mediaListId'],
        'title': json['title'] == null ? undefined : json['title'],
        'groupId': json['groupId'] == null ? undefined : json['groupId'],
        'projectId': json['projectId'] == null ? undefined : json['projectId'],
        'shareCode': json['shareCode'] == null ? undefined : json['shareCode'],
        'media': json['media'] == null ? undefined : json['media'],
        'mediaCount': json['mediaCount'] == null ? undefined : json['mediaCount'],
        'emailCount': json['emailCount'] == null ? undefined : json['emailCount'],
        'owner': json['owner'] == null ? undefined : UserDtoForSimpleFromJSON(json['owner']),
        'register': json['register'] == null ? undefined : UserDtoForSimpleFromJSON(json['register']),
        'updater': json['updater'] == null ? undefined : UserDtoForSimpleFromJSON(json['updater']),
        'cuUser': json['cuUser'] == null ? undefined : UserDtoForSimpleFromJSON(json['cuUser']),
        'cuType': json['cuType'] == null ? undefined : json['cuType'],
        'regisAt': json['regisAt'] == null ? undefined : (new Date(json['regisAt'])),
        'updateAt': json['updateAt'] == null ? undefined : (new Date(json['updateAt'])),
    };
}

export function MediaListDtoToJSON(value?: MediaListDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'mediaListId': value['mediaListId'],
        'title': value['title'],
        'groupId': value['groupId'],
        'projectId': value['projectId'],
        'shareCode': value['shareCode'],
        'media': value['media'],
        'mediaCount': value['mediaCount'],
        'emailCount': value['emailCount'],
        'owner': UserDtoForSimpleToJSON(value['owner']),
        'register': UserDtoForSimpleToJSON(value['register']),
        'updater': UserDtoForSimpleToJSON(value['updater']),
        'cuUser': UserDtoForSimpleToJSON(value['cuUser']),
        'cuType': value['cuType'],
        'regisAt': value['regisAt'] == null ? undefined : ((value['regisAt']).toISOString()),
        'updateAt': value['updateAt'] == null ? undefined : ((value['updateAt']).toISOString()),
    };
}

