/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserDtoForGroup } from './UserDtoForGroup';
import {
    UserDtoForGroupFromJSON,
    UserDtoForGroupFromJSONTyped,
    UserDtoForGroupToJSON,
} from './UserDtoForGroup';

/**
 * 
 * @export
 * @interface ActionLogDto
 */
export interface ActionLogDto {
    /**
     * 
     * @type {number}
     * @memberof ActionLogDto
     */
    actionLogId?: number;
    /**
     * 
     * @type {number}
     * @memberof ActionLogDto
     */
    actionId?: number;
    /**
     * 
     * @type {string}
     * @memberof ActionLogDto
     */
    workType?: string;
    /**
     * 
     * @type {string}
     * @memberof ActionLogDto
     */
    field?: string;
    /**
     * 
     * @type {string}
     * @memberof ActionLogDto
     */
    prevVal?: string;
    /**
     * 
     * @type {string}
     * @memberof ActionLogDto
     */
    newVal?: string;
    /**
     * 
     * @type {UserDtoForGroup}
     * @memberof ActionLogDto
     */
    register?: UserDtoForGroup;
    /**
     * 
     * @type {string}
     * @memberof ActionLogDto
     */
    regisAt?: string;
}

/**
 * Check if a given object implements the ActionLogDto interface.
 */
export function instanceOfActionLogDto(value: object): value is ActionLogDto {
    return true;
}

export function ActionLogDtoFromJSON(json: any): ActionLogDto {
    return ActionLogDtoFromJSONTyped(json, false);
}

export function ActionLogDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActionLogDto {
    if (json == null) {
        return json;
    }
    return {
        
        'actionLogId': json['actionLogId'] == null ? undefined : json['actionLogId'],
        'actionId': json['actionId'] == null ? undefined : json['actionId'],
        'workType': json['workType'] == null ? undefined : json['workType'],
        'field': json['field'] == null ? undefined : json['field'],
        'prevVal': json['prevVal'] == null ? undefined : json['prevVal'],
        'newVal': json['newVal'] == null ? undefined : json['newVal'],
        'register': json['register'] == null ? undefined : UserDtoForGroupFromJSON(json['register']),
        'regisAt': json['regisAt'] == null ? undefined : json['regisAt'],
    };
}

export function ActionLogDtoToJSON(value?: ActionLogDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'actionLogId': value['actionLogId'],
        'actionId': value['actionId'],
        'workType': value['workType'],
        'field': value['field'],
        'prevVal': value['prevVal'],
        'newVal': value['newVal'],
        'register': UserDtoForGroupToJSON(value['register']),
        'regisAt': value['regisAt'],
    };
}

