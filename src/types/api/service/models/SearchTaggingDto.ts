/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SearchTaggingDto
 */
export interface SearchTaggingDto {
    /**
     * 대상 ID( News Id / Action Id) 목록 
     * @type {Array<number>}
     * @memberof SearchTaggingDto
     */
    targetIdList: Array<number>;
    /**
     * 구분값 : NEWS(뉴스) / ACTION(활동) 구분값 
     * @type {string}
     * @memberof SearchTaggingDto
     */
    category: string;
    /**
     * GroupId, 대상에 연결된 태그 중 해당 그룹에 속한 태그만 보여줘야함
     * @type {number}
     * @memberof SearchTaggingDto
     */
    groupId: number;
    /**
     * 정렬 ["name!desc"] ["regisAt!desc"] 
     * @type {Array<string>}
     * @memberof SearchTaggingDto
     */
    sort?: Array<string>;
}

/**
 * Check if a given object implements the SearchTaggingDto interface.
 */
export function instanceOfSearchTaggingDto(value: object): value is SearchTaggingDto {
    if (!('targetIdList' in value) || value['targetIdList'] === undefined) return false;
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('groupId' in value) || value['groupId'] === undefined) return false;
    return true;
}

export function SearchTaggingDtoFromJSON(json: any): SearchTaggingDto {
    return SearchTaggingDtoFromJSONTyped(json, false);
}

export function SearchTaggingDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchTaggingDto {
    if (json == null) {
        return json;
    }
    return {
        
        'targetIdList': json['targetIdList'],
        'category': json['category'],
        'groupId': json['groupId'],
        'sort': json['sort'] == null ? undefined : json['sort'],
    };
}

export function SearchTaggingDtoToJSON(value?: SearchTaggingDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'targetIdList': value['targetIdList'],
        'category': value['category'],
        'groupId': value['groupId'],
        'sort': value['sort'],
    };
}

