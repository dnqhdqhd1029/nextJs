/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PayRequestAfterPayDto
 */
export interface PayRequestAfterPayDto {
    /**
     * 
     * @type {number}
     * @memberof PayRequestAfterPayDto
     */
    payRequestId?: number;
    /**
     * 견적서ID
     * @type {number}
     * @memberof PayRequestAfterPayDto
     */
    estimateId?: number;
    /**
     * 
     * @type {number}
     * @memberof PayRequestAfterPayDto
     */
    customerId?: number;
    /**
     * 신청자 이름
     * @type {string}
     * @memberof PayRequestAfterPayDto
     */
    customerName?: string;
    /**
     * 신청자 휴대전화
     * @type {string}
     * @memberof PayRequestAfterPayDto
     */
    customerMobile?: string;
    /**
     * 신청자 부서
     * @type {string}
     * @memberof PayRequestAfterPayDto
     */
    customerDepartment?: string;
    /**
     * 신청자 직책
     * @type {string}
     * @memberof PayRequestAfterPayDto
     */
    customerPosition?: string;
    /**
     * 신청자 요청사항
     * @type {string}
     * @memberof PayRequestAfterPayDto
     */
    customerMemo?: string;
    /**
     * 결제자 이름
     * @type {string}
     * @memberof PayRequestAfterPayDto
     */
    payerName?: string;
    /**
     * 결제자 이메일
     * @type {string}
     * @memberof PayRequestAfterPayDto
     */
    payerEmail?: string;
    /**
     * 결제 방법, 공통코드 PAY_METHOD
     * @type {string}
     * @memberof PayRequestAfterPayDto
     */
    payMethod?: string;
    /**
     * 계산서 코드, 공통코드 INVOICE_TYPE
     * @type {string}
     * @memberof PayRequestAfterPayDto
     */
    invoiceType?: string;
    /**
     * 견적금액
     * @type {number}
     * @memberof PayRequestAfterPayDto
     */
    estimatedAmount?: number;
    /**
     * 결제상태, 공통코드 DEPOSITED_TYPE
     * @type {string}
     * @memberof PayRequestAfterPayDto
     */
    depositedType?: string;
    /**
     * 상호명
     * @type {string}
     * @memberof PayRequestAfterPayDto
     */
    comName?: string;
    /**
     * 등록일
     * @type {string}
     * @memberof PayRequestAfterPayDto
     */
    regisAt?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof PayRequestAfterPayDto
     */
    productNameList?: Array<string>;
}

/**
 * Check if a given object implements the PayRequestAfterPayDto interface.
 */
export function instanceOfPayRequestAfterPayDto(value: object): value is PayRequestAfterPayDto {
    return true;
}

export function PayRequestAfterPayDtoFromJSON(json: any): PayRequestAfterPayDto {
    return PayRequestAfterPayDtoFromJSONTyped(json, false);
}

export function PayRequestAfterPayDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PayRequestAfterPayDto {
    if (json == null) {
        return json;
    }
    return {
        
        'payRequestId': json['payRequestId'] == null ? undefined : json['payRequestId'],
        'estimateId': json['estimateId'] == null ? undefined : json['estimateId'],
        'customerId': json['customerId'] == null ? undefined : json['customerId'],
        'customerName': json['customerName'] == null ? undefined : json['customerName'],
        'customerMobile': json['customerMobile'] == null ? undefined : json['customerMobile'],
        'customerDepartment': json['customerDepartment'] == null ? undefined : json['customerDepartment'],
        'customerPosition': json['customerPosition'] == null ? undefined : json['customerPosition'],
        'customerMemo': json['customerMemo'] == null ? undefined : json['customerMemo'],
        'payerName': json['payerName'] == null ? undefined : json['payerName'],
        'payerEmail': json['payerEmail'] == null ? undefined : json['payerEmail'],
        'payMethod': json['payMethod'] == null ? undefined : json['payMethod'],
        'invoiceType': json['invoiceType'] == null ? undefined : json['invoiceType'],
        'estimatedAmount': json['estimatedAmount'] == null ? undefined : json['estimatedAmount'],
        'depositedType': json['depositedType'] == null ? undefined : json['depositedType'],
        'comName': json['comName'] == null ? undefined : json['comName'],
        'regisAt': json['regisAt'] == null ? undefined : json['regisAt'],
        'productNameList': json['productNameList'] == null ? undefined : json['productNameList'],
    };
}

export function PayRequestAfterPayDtoToJSON(value?: PayRequestAfterPayDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'payRequestId': value['payRequestId'],
        'estimateId': value['estimateId'],
        'customerId': value['customerId'],
        'customerName': value['customerName'],
        'customerMobile': value['customerMobile'],
        'customerDepartment': value['customerDepartment'],
        'customerPosition': value['customerPosition'],
        'customerMemo': value['customerMemo'],
        'payerName': value['payerName'],
        'payerEmail': value['payerEmail'],
        'payMethod': value['payMethod'],
        'invoiceType': value['invoiceType'],
        'estimatedAmount': value['estimatedAmount'],
        'depositedType': value['depositedType'],
        'comName': value['comName'],
        'regisAt': value['regisAt'],
        'productNameList': value['productNameList'],
    };
}

