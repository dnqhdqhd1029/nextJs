/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RequestActionFilterDto
 */
export interface RequestActionFilterDto {
    /**
     * 선택된 그룹 ID, 공유 대상이 이그룹인 경우에 조건으로 처리
     * @type {number}
     * @memberof RequestActionFilterDto
     */
    groupId: number;
    /**
     * 시간대 타임존,  Asia/Seoul 
     * @type {string}
     * @memberof RequestActionFilterDto
     */
    timezone?: string;
    /**
     * 기간에 따른 시작 연,월,일과 종료 연,월,일
     * @type {string}
     * @memberof RequestActionFilterDto
     */
    periodStartYear?: string;
    /**
     * 시작 월
     * @type {string}
     * @memberof RequestActionFilterDto
     */
    periodStartMonth?: string;
    /**
     * 시작 일
     * @type {string}
     * @memberof RequestActionFilterDto
     */
    periodStartDay?: string;
    /**
     * 기간에 따른 종료 연,월,일과 종료 연,월,일
     * @type {string}
     * @memberof RequestActionFilterDto
     */
    periodEndYear?: string;
    /**
     * 종료 월
     * @type {string}
     * @memberof RequestActionFilterDto
     */
    periodEndMonth?: string;
    /**
     * 종료 일
     * @type {string}
     * @memberof RequestActionFilterDto
     */
    periodEndDay?: string;
}

/**
 * Check if a given object implements the RequestActionFilterDto interface.
 */
export function instanceOfRequestActionFilterDto(value: object): value is RequestActionFilterDto {
    if (!('groupId' in value) || value['groupId'] === undefined) return false;
    return true;
}

export function RequestActionFilterDtoFromJSON(json: any): RequestActionFilterDto {
    return RequestActionFilterDtoFromJSONTyped(json, false);
}

export function RequestActionFilterDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestActionFilterDto {
    if (json == null) {
        return json;
    }
    return {
        
        'groupId': json['groupId'],
        'timezone': json['timezone'] == null ? undefined : json['timezone'],
        'periodStartYear': json['periodStartYear'] == null ? undefined : json['periodStartYear'],
        'periodStartMonth': json['periodStartMonth'] == null ? undefined : json['periodStartMonth'],
        'periodStartDay': json['periodStartDay'] == null ? undefined : json['periodStartDay'],
        'periodEndYear': json['periodEndYear'] == null ? undefined : json['periodEndYear'],
        'periodEndMonth': json['periodEndMonth'] == null ? undefined : json['periodEndMonth'],
        'periodEndDay': json['periodEndDay'] == null ? undefined : json['periodEndDay'],
    };
}

export function RequestActionFilterDtoToJSON(value?: RequestActionFilterDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'groupId': value['groupId'],
        'timezone': value['timezone'],
        'periodStartYear': value['periodStartYear'],
        'periodStartMonth': value['periodStartMonth'],
        'periodStartDay': value['periodStartDay'],
        'periodEndYear': value['periodEndYear'],
        'periodEndMonth': value['periodEndMonth'],
        'periodEndDay': value['periodEndDay'],
    };
}

