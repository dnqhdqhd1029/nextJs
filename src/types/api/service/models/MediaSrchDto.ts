/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserDtoForGroup } from './UserDtoForGroup';
import {
    UserDtoForGroupFromJSON,
    UserDtoForGroupFromJSONTyped,
    UserDtoForGroupToJSON,
} from './UserDtoForGroup';

/**
 * 
 * @export
 * @interface MediaSrchDto
 */
export interface MediaSrchDto {
    /**
     * 
     * @type {number}
     * @memberof MediaSrchDto
     */
    mediaSrchId?: number;
    /**
     * 
     * @type {string}
     * @memberof MediaSrchDto
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaSrchDto
     */
    shareCode?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaSrchDto
     */
    shareTargetCode?: string;
    /**
     * 
     * @type {number}
     * @memberof MediaSrchDto
     */
    companyId?: number;
    /**
     * 
     * @type {number}
     * @memberof MediaSrchDto
     */
    groupId?: number;
    /**
     * 
     * @type {string}
     * @memberof MediaSrchDto
     */
    conditions?: string;
    /**
     * 
     * @type {UserDtoForGroup}
     * @memberof MediaSrchDto
     */
    owner?: UserDtoForGroup;
    /**
     * 
     * @type {UserDtoForGroup}
     * @memberof MediaSrchDto
     */
    register?: UserDtoForGroup;
    /**
     * 
     * @type {UserDtoForGroup}
     * @memberof MediaSrchDto
     */
    updater?: UserDtoForGroup;
    /**
     * 
     * @type {Date}
     * @memberof MediaSrchDto
     */
    regisAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof MediaSrchDto
     */
    updateAt?: Date;
}

/**
 * Check if a given object implements the MediaSrchDto interface.
 */
export function instanceOfMediaSrchDto(value: object): value is MediaSrchDto {
    return true;
}

export function MediaSrchDtoFromJSON(json: any): MediaSrchDto {
    return MediaSrchDtoFromJSONTyped(json, false);
}

export function MediaSrchDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaSrchDto {
    if (json == null) {
        return json;
    }
    return {
        
        'mediaSrchId': json['mediaSrchId'] == null ? undefined : json['mediaSrchId'],
        'title': json['title'] == null ? undefined : json['title'],
        'shareCode': json['shareCode'] == null ? undefined : json['shareCode'],
        'shareTargetCode': json['shareTargetCode'] == null ? undefined : json['shareTargetCode'],
        'companyId': json['companyId'] == null ? undefined : json['companyId'],
        'groupId': json['groupId'] == null ? undefined : json['groupId'],
        'conditions': json['conditions'] == null ? undefined : json['conditions'],
        'owner': json['owner'] == null ? undefined : UserDtoForGroupFromJSON(json['owner']),
        'register': json['register'] == null ? undefined : UserDtoForGroupFromJSON(json['register']),
        'updater': json['updater'] == null ? undefined : UserDtoForGroupFromJSON(json['updater']),
        'regisAt': json['regisAt'] == null ? undefined : (new Date(json['regisAt'])),
        'updateAt': json['updateAt'] == null ? undefined : (new Date(json['updateAt'])),
    };
}

export function MediaSrchDtoToJSON(value?: MediaSrchDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'mediaSrchId': value['mediaSrchId'],
        'title': value['title'],
        'shareCode': value['shareCode'],
        'shareTargetCode': value['shareTargetCode'],
        'companyId': value['companyId'],
        'groupId': value['groupId'],
        'conditions': value['conditions'],
        'owner': UserDtoForGroupToJSON(value['owner']),
        'register': UserDtoForGroupToJSON(value['register']),
        'updater': UserDtoForGroupToJSON(value['updater']),
        'regisAt': value['regisAt'] == null ? undefined : ((value['regisAt']).toISOString()),
        'updateAt': value['updateAt'] == null ? undefined : ((value['updateAt']).toISOString()),
    };
}

