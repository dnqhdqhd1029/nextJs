/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 회원 수정 정보
 * @export
 * @interface ModifyUserDto
 */
export interface ModifyUserDto {
    /**
     * 이름
     * @type {string}
     * @memberof ModifyUserDto
     */
    name: string;
    /**
     * 표시이름
     * @type {string}
     * @memberof ModifyUserDto
     */
    nickname?: string;
    /**
     * 부서
     * @type {string}
     * @memberof ModifyUserDto
     */
    department?: string;
    /**
     * 직책
     * @type {string}
     * @memberof ModifyUserDto
     */
    position?: string;
    /**
     * 휴대폰
     * @type {string}
     * @memberof ModifyUserDto
     */
    mobile?: string;
    /**
     * 전화번호
     * @type {string}
     * @memberof ModifyUserDto
     */
    phone?: string;
    /**
     * 권한
     * @type {string}
     * @memberof ModifyUserDto
     */
    role?: ModifyUserDtoRoleEnum;
    /**
     * 랜딩페이지, 공통코드:USER_LANDING_PAGE
     * @type {string}
     * @memberof ModifyUserDto
     */
    landingPage?: string;
    /**
     * 뉴스레터 수신여부
     * @type {boolean}
     * @memberof ModifyUserDto
     */
    receiveLetter?: boolean;
    /**
     * 대시보드 layout
     * @type {string}
     * @memberof ModifyUserDto
     */
    dashboard?: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof ModifyUserDto
     */
    groups?: Array<number>;
}


/**
 * @export
 */
export const ModifyUserDtoRoleEnum = {
    Admin: 'ADMIN',
    User: 'USER'
} as const;
export type ModifyUserDtoRoleEnum = typeof ModifyUserDtoRoleEnum[keyof typeof ModifyUserDtoRoleEnum];


/**
 * Check if a given object implements the ModifyUserDto interface.
 */
export function instanceOfModifyUserDto(value: object): value is ModifyUserDto {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function ModifyUserDtoFromJSON(json: any): ModifyUserDto {
    return ModifyUserDtoFromJSONTyped(json, false);
}

export function ModifyUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModifyUserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'department': json['department'] == null ? undefined : json['department'],
        'position': json['position'] == null ? undefined : json['position'],
        'mobile': json['mobile'] == null ? undefined : json['mobile'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'role': json['role'] == null ? undefined : json['role'],
        'landingPage': json['landingPage'] == null ? undefined : json['landingPage'],
        'receiveLetter': json['receiveLetter'] == null ? undefined : json['receiveLetter'],
        'dashboard': json['dashboard'] == null ? undefined : json['dashboard'],
        'groups': json['groups'] == null ? undefined : json['groups'],
    };
}

export function ModifyUserDtoToJSON(value?: ModifyUserDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'nickname': value['nickname'],
        'department': value['department'],
        'position': value['position'],
        'mobile': value['mobile'],
        'phone': value['phone'],
        'role': value['role'],
        'landingPage': value['landingPage'],
        'receiveLetter': value['receiveLetter'],
        'dashboard': value['dashboard'],
        'groups': value['groups'],
    };
}

