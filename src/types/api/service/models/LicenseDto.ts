/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MemberDto } from './MemberDto';
import {
    MemberDtoFromJSON,
    MemberDtoFromJSONTyped,
    MemberDtoToJSON,
} from './MemberDto';
import type { UserDtoForSimple } from './UserDtoForSimple';
import {
    UserDtoForSimpleFromJSON,
    UserDtoForSimpleFromJSONTyped,
    UserDtoForSimpleToJSON,
} from './UserDtoForSimple';
import type { ProductDto } from './ProductDto';
import {
    ProductDtoFromJSON,
    ProductDtoFromJSONTyped,
    ProductDtoToJSON,
} from './ProductDto';
import type { CompanySimpleDto } from './CompanySimpleDto';
import {
    CompanySimpleDtoFromJSON,
    CompanySimpleDtoFromJSONTyped,
    CompanySimpleDtoToJSON,
} from './CompanySimpleDto';

/**
 * 
 * @export
 * @interface LicenseDto
 */
export interface LicenseDto {
    /**
     * 
     * @type {number}
     * @memberof LicenseDto
     */
    licenseId?: number;
    /**
     * 라이선스 번호
     * @type {string}
     * @memberof LicenseDto
     */
    license?: string;
    /**
     * 일반상품 이름
     * @type {string}
     * @memberof LicenseDto
     */
    mainProductName?: string;
    /**
     * 그룹 사용여부 
     * @type {boolean}
     * @memberof LicenseDto
     */
    flagGroup?: boolean;
    /**
     * 사용자 관리 사용여부 - 사용자가 2명 이상인 경우 사용 
     * @type {boolean}
     * @memberof LicenseDto
     */
    flagUser?: boolean;
    /**
     * 공유설정(비공개/공개/수정) 사용여부 - 사용자가 2명 이상인 경우 사용
     * @type {boolean}
     * @memberof LicenseDto
     */
    flagShare?: boolean;
    /**
     * 언론/미디어 사용여부 
     * @type {boolean}
     * @memberof LicenseDto
     */
    flagContact?: boolean;
    /**
     * 배포 사용여부 
     * @type {boolean}
     * @memberof LicenseDto
     */
    flagRelease?: boolean;
    /**
     * 뉴스와이어배포 사용여부 
     * @type {boolean}
     * @memberof LicenseDto
     */
    flagNewswire?: boolean;
    /**
     * 뉴스로 언론인 검색 가능여부 
     * @type {boolean}
     * @memberof LicenseDto
     */
    flagNewsCondition?: boolean;
    /**
     * 고객지원 전담자 존재여부 
     * @type {boolean}
     * @memberof LicenseDto
     */
    flagManager?: boolean;
    /**
     * 모니터링 사용여부 
     * @type {boolean}
     * @memberof LicenseDto
     */
    flagMonitoring?: boolean;
    /**
     * 모니터링-알리미 사용여부 
     * @type {boolean}
     * @memberof LicenseDto
     */
    flagNewsNotice?: boolean;
    /**
     * 프로젝트 사용여부 
     * @type {boolean}
     * @memberof LicenseDto
     */
    flagProject?: boolean;
    /**
     * 
     * @type {CompanySimpleDto}
     * @memberof LicenseDto
     */
    company?: CompanySimpleDto;
    /**
     * 등록일시
     * @type {string}
     * @memberof LicenseDto
     */
    regisAt?: string;
    /**
     * 수정일시
     * @type {string}
     * @memberof LicenseDto
     */
    updateAt?: string;
    /**
     * 라이선스 시작일시
     * @type {string}
     * @memberof LicenseDto
     */
    startAt?: string;
    /**
     * 라이선스 만료일시
     * @type {string}
     * @memberof LicenseDto
     */
    expireAt?: string;
    /**
     * 만료 여부
     * @type {boolean}
     * @memberof LicenseDto
     */
    isExpired?: boolean;
    /**
     * 제한 사용자수
     * @type {number}
     * @memberof LicenseDto
     */
    userLimit?: number;
    /**
     * 제한 그룹수
     * @type {number}
     * @memberof LicenseDto
     */
    groupLimit?: number;
    /**
     * 제한 이메일수
     * @type {number}
     * @memberof LicenseDto
     */
    emailLimit?: number;
    /**
     * 제한 뉴스와이어 배포 수
     * @type {number}
     * @memberof LicenseDto
     */
    nwLimit?: number;
    /**
     * 
     * @type {UserDtoForSimple}
     * @memberof LicenseDto
     */
    buyer?: UserDtoForSimple;
    /**
     * 
     * @type {MemberDto}
     * @memberof LicenseDto
     */
    member?: MemberDto;
    /**
     * 제한 이메일수 상세(추가 상품이 있는 경우, 일반상품 + 추가상품정보...)
     * @type {Array<number>}
     * @memberof LicenseDto
     */
    emailLimitDetail?: Array<number>;
    /**
     * 제한 뉴스와이어 배포 수 상세(추가 상품이 있는 경우, 일반상품 + 추가상품정보...)
     * @type {Array<number>}
     * @memberof LicenseDto
     */
    nwLimitDetail?: Array<number>;
    /**
     * 남은 이메일 수
     * @type {number}
     * @memberof LicenseDto
     */
    emailLeft?: number;
    /**
     * 남은 뉴스와이어 배포 수
     * @type {number}
     * @memberof LicenseDto
     */
    nwLeft?: number;
    /**
     * 사용한 이메일 수
     * @type {number}
     * @memberof LicenseDto
     */
    emailCount?: number;
    /**
     * 사용한 뉴스와이어 배포 수
     * @type {number}
     * @memberof LicenseDto
     */
    nwCount?: number;
    /**
     * 사용한 사용자 수
     * @type {number}
     * @memberof LicenseDto
     */
    userCount?: number;
    /**
     * 사용한 그룹 수
     * @type {number}
     * @memberof LicenseDto
     */
    groupCount?: number;
    /**
     * 관련 제품 목록
     * @type {Array<ProductDto>}
     * @memberof LicenseDto
     */
    productList?: Array<ProductDto>;
    /**
     * 
     * @type {number}
     * @memberof LicenseDto
     */
    regisBy?: number;
    /**
     * 
     * @type {number}
     * @memberof LicenseDto
     */
    updateBy?: number;
    /**
     * 
     * @type {number}
     * @memberof LicenseDto
     */
    dday?: number;
}

/**
 * Check if a given object implements the LicenseDto interface.
 */
export function instanceOfLicenseDto(value: object): value is LicenseDto {
    return true;
}

export function LicenseDtoFromJSON(json: any): LicenseDto {
    return LicenseDtoFromJSONTyped(json, false);
}

export function LicenseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): LicenseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'licenseId': json['licenseId'] == null ? undefined : json['licenseId'],
        'license': json['license'] == null ? undefined : json['license'],
        'mainProductName': json['mainProductName'] == null ? undefined : json['mainProductName'],
        'flagGroup': json['flagGroup'] == null ? undefined : json['flagGroup'],
        'flagUser': json['flagUser'] == null ? undefined : json['flagUser'],
        'flagShare': json['flagShare'] == null ? undefined : json['flagShare'],
        'flagContact': json['flagContact'] == null ? undefined : json['flagContact'],
        'flagRelease': json['flagRelease'] == null ? undefined : json['flagRelease'],
        'flagNewswire': json['flagNewswire'] == null ? undefined : json['flagNewswire'],
        'flagNewsCondition': json['flagNewsCondition'] == null ? undefined : json['flagNewsCondition'],
        'flagManager': json['flagManager'] == null ? undefined : json['flagManager'],
        'flagMonitoring': json['flagMonitoring'] == null ? undefined : json['flagMonitoring'],
        'flagNewsNotice': json['flagNewsNotice'] == null ? undefined : json['flagNewsNotice'],
        'flagProject': json['flagProject'] == null ? undefined : json['flagProject'],
        'company': json['company'] == null ? undefined : CompanySimpleDtoFromJSON(json['company']),
        'regisAt': json['regisAt'] == null ? undefined : json['regisAt'],
        'updateAt': json['updateAt'] == null ? undefined : json['updateAt'],
        'startAt': json['startAt'] == null ? undefined : json['startAt'],
        'expireAt': json['expireAt'] == null ? undefined : json['expireAt'],
        'isExpired': json['isExpired'] == null ? undefined : json['isExpired'],
        'userLimit': json['userLimit'] == null ? undefined : json['userLimit'],
        'groupLimit': json['groupLimit'] == null ? undefined : json['groupLimit'],
        'emailLimit': json['emailLimit'] == null ? undefined : json['emailLimit'],
        'nwLimit': json['nwLimit'] == null ? undefined : json['nwLimit'],
        'buyer': json['buyer'] == null ? undefined : UserDtoForSimpleFromJSON(json['buyer']),
        'member': json['member'] == null ? undefined : MemberDtoFromJSON(json['member']),
        'emailLimitDetail': json['emailLimitDetail'] == null ? undefined : json['emailLimitDetail'],
        'nwLimitDetail': json['nwLimitDetail'] == null ? undefined : json['nwLimitDetail'],
        'emailLeft': json['emailLeft'] == null ? undefined : json['emailLeft'],
        'nwLeft': json['nwLeft'] == null ? undefined : json['nwLeft'],
        'emailCount': json['emailCount'] == null ? undefined : json['emailCount'],
        'nwCount': json['nwCount'] == null ? undefined : json['nwCount'],
        'userCount': json['userCount'] == null ? undefined : json['userCount'],
        'groupCount': json['groupCount'] == null ? undefined : json['groupCount'],
        'productList': json['productList'] == null ? undefined : ((json['productList'] as Array<any>).map(ProductDtoFromJSON)),
        'regisBy': json['regisBy'] == null ? undefined : json['regisBy'],
        'updateBy': json['updateBy'] == null ? undefined : json['updateBy'],
        'dday': json['dday'] == null ? undefined : json['dday'],
    };
}

export function LicenseDtoToJSON(value?: LicenseDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'licenseId': value['licenseId'],
        'license': value['license'],
        'mainProductName': value['mainProductName'],
        'flagGroup': value['flagGroup'],
        'flagUser': value['flagUser'],
        'flagShare': value['flagShare'],
        'flagContact': value['flagContact'],
        'flagRelease': value['flagRelease'],
        'flagNewswire': value['flagNewswire'],
        'flagNewsCondition': value['flagNewsCondition'],
        'flagManager': value['flagManager'],
        'flagMonitoring': value['flagMonitoring'],
        'flagNewsNotice': value['flagNewsNotice'],
        'flagProject': value['flagProject'],
        'company': CompanySimpleDtoToJSON(value['company']),
        'regisAt': value['regisAt'],
        'updateAt': value['updateAt'],
        'startAt': value['startAt'],
        'expireAt': value['expireAt'],
        'isExpired': value['isExpired'],
        'userLimit': value['userLimit'],
        'groupLimit': value['groupLimit'],
        'emailLimit': value['emailLimit'],
        'nwLimit': value['nwLimit'],
        'buyer': UserDtoForSimpleToJSON(value['buyer']),
        'member': MemberDtoToJSON(value['member']),
        'emailLimitDetail': value['emailLimitDetail'],
        'nwLimitDetail': value['nwLimitDetail'],
        'emailLeft': value['emailLeft'],
        'nwLeft': value['nwLeft'],
        'emailCount': value['emailCount'],
        'nwCount': value['nwCount'],
        'userCount': value['userCount'],
        'groupCount': value['groupCount'],
        'productList': value['productList'] == null ? undefined : ((value['productList'] as Array<any>).map(ProductDtoToJSON)),
        'regisBy': value['regisBy'],
        'updateBy': value['updateBy'],
        'dday': value['dday'],
    };
}

