/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IdNameDto } from './IdNameDto';
import {
    IdNameDtoFromJSON,
    IdNameDtoFromJSONTyped,
    IdNameDtoToJSON,
} from './IdNameDto';

/**
 * 
 * @export
 * @interface RequestNewsUserDocDto
 */
export interface RequestNewsUserDocDto {
    /**
     * 
     * @type {string}
     * @memberof RequestNewsUserDocDto
     */
    link?: string;
    /**
     * 제목
     * @type {string}
     * @memberof RequestNewsUserDocDto
     */
    title: string;
    /**
     * 게시일 연
     * @type {string}
     * @memberof RequestNewsUserDocDto
     */
    year: string;
    /**
     * 게시일 월
     * @type {string}
     * @memberof RequestNewsUserDocDto
     */
    month: string;
    /**
     * 게시일 일
     * @type {string}
     * @memberof RequestNewsUserDocDto
     */
    day: string;
    /**
     * 게시일 시
     * @type {string}
     * @memberof RequestNewsUserDocDto
     */
    hour?: string;
    /**
     * 게시일 분
     * @type {string}
     * @memberof RequestNewsUserDocDto
     */
    min?: string;
    /**
     * 사용자 시간대, 공통코드 - TIMEZONE 
     * @type {string}
     * @memberof RequestNewsUserDocDto
     */
    timezone: string;
    /**
     * 
     * @type {number}
     * @memberof RequestNewsUserDocDto
     */
    mediaId?: number;
    /**
     * 
     * @type {string}
     * @memberof RequestNewsUserDocDto
     */
    mediaName?: string;
    /**
     * 관련 언론인 ID/Name 목록, ID 없는 경우 매핑 안된 언론인 
     * @type {Array<IdNameDto>}
     * @memberof RequestNewsUserDocDto
     */
    journalists?: Array<IdNameDto>;
    /**
     * 
     * @type {Array<number>}
     * @memberof RequestNewsUserDocDto
     */
    clipbookIdList?: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof RequestNewsUserDocDto
     */
    tagIdList?: Array<number>;
    /**
     * 
     * @type {boolean}
     * @memberof RequestNewsUserDocDto
     */
    is_linked?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RequestNewsUserDocDto
     */
    link_summary?: string;
    /**
     * 
     * @type {string}
     * @memberof RequestNewsUserDocDto
     */
    link_title?: string;
    /**
     * 
     * @type {string}
     * @memberof RequestNewsUserDocDto
     */
    link_id?: string;
}

/**
 * Check if a given object implements the RequestNewsUserDocDto interface.
 */
export function instanceOfRequestNewsUserDocDto(value: object): value is RequestNewsUserDocDto {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('year' in value) || value['year'] === undefined) return false;
    if (!('month' in value) || value['month'] === undefined) return false;
    if (!('day' in value) || value['day'] === undefined) return false;
    if (!('timezone' in value) || value['timezone'] === undefined) return false;
    return true;
}

export function RequestNewsUserDocDtoFromJSON(json: any): RequestNewsUserDocDto {
    return RequestNewsUserDocDtoFromJSONTyped(json, false);
}

export function RequestNewsUserDocDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestNewsUserDocDto {
    if (json == null) {
        return json;
    }
    return {
        
        'link': json['link'] == null ? undefined : json['link'],
        'title': json['title'],
        'year': json['year'],
        'month': json['month'],
        'day': json['day'],
        'hour': json['hour'] == null ? undefined : json['hour'],
        'min': json['min'] == null ? undefined : json['min'],
        'timezone': json['timezone'],
        'mediaId': json['mediaId'] == null ? undefined : json['mediaId'],
        'mediaName': json['mediaName'] == null ? undefined : json['mediaName'],
        'journalists': json['journalists'] == null ? undefined : ((json['journalists'] as Array<any>).map(IdNameDtoFromJSON)),
        'clipbookIdList': json['clipbookIdList'] == null ? undefined : json['clipbookIdList'],
        'tagIdList': json['tagIdList'] == null ? undefined : json['tagIdList'],
        'is_linked': json['is_linked'] == null ? undefined : json['is_linked'],
        'link_summary': json['link_summary'] == null ? undefined : json['link_summary'],
        'link_title': json['link_title'] == null ? undefined : json['link_title'],
        'link_id': json['link_id'] == null ? undefined : json['link_id'],
    };
}

export function RequestNewsUserDocDtoToJSON(value?: RequestNewsUserDocDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'link': value['link'],
        'title': value['title'],
        'year': value['year'],
        'month': value['month'],
        'day': value['day'],
        'hour': value['hour'],
        'min': value['min'],
        'timezone': value['timezone'],
        'mediaId': value['mediaId'],
        'mediaName': value['mediaName'],
        'journalists': value['journalists'] == null ? undefined : ((value['journalists'] as Array<any>).map(IdNameDtoToJSON)),
        'clipbookIdList': value['clipbookIdList'],
        'tagIdList': value['tagIdList'],
        'is_linked': value['is_linked'],
        'link_summary': value['link_summary'],
        'link_title': value['link_title'],
        'link_id': value['link_id'],
    };
}

