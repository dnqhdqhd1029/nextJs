/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SocialDto } from './SocialDto';
import {
    SocialDtoFromJSON,
    SocialDtoFromJSONTyped,
    SocialDtoToJSON,
} from './SocialDto';

/**
 * 
 * @export
 * @interface CreateJournalistDto
 */
export interface CreateJournalistDto {
    /**
     * 언론인 이름
     * @type {string}
     * @memberof CreateJournalistDto
     */
    name: string;
    /**
     * 미디어명
     * @type {string}
     * @memberof CreateJournalistDto
     */
    mediaName: string;
    /**
     * 부서
     * @type {string}
     * @memberof CreateJournalistDto
     */
    department?: string;
    /**
     * 직책
     * @type {string}
     * @memberof CreateJournalistDto
     */
    position?: string;
    /**
     * 이메일
     * @type {string}
     * @memberof CreateJournalistDto
     */
    email: string;
    /**
     * 유선전화
     * @type {string}
     * @memberof CreateJournalistDto
     */
    landline?: string;
    /**
     * 모바일
     * @type {string}
     * @memberof CreateJournalistDto
     */
    mobile?: string;
    /**
     * 분야 - 콤마로 구분
     * @type {string}
     * @memberof CreateJournalistDto
     */
    fields?: string;
    /**
     * 주소
     * @type {string}
     * @memberof CreateJournalistDto
     */
    address?: string;
    /**
     * 경력
     * @type {string}
     * @memberof CreateJournalistDto
     */
    career?: string;
    /**
     * 학력
     * @type {string}
     * @memberof CreateJournalistDto
     */
    education?: string;
    /**
     * 저서
     * @type {string}
     * @memberof CreateJournalistDto
     */
    writings?: string;
    /**
     * 수상경력
     * @type {string}
     * @memberof CreateJournalistDto
     */
    awards?: string;
    /**
     * 소셜목록, TypeID - 공통코드 JRNLST_SOCIAL_USER_ADD 
     * @type {Array<SocialDto>}
     * @memberof CreateJournalistDto
     */
    socials?: Array<SocialDto>;
    /**
     * 언론인 목록
     * @type {Array<number>}
     * @memberof CreateJournalistDto
     */
    jrnlstLists?: Array<number>;
}

/**
 * Check if a given object implements the CreateJournalistDto interface.
 */
export function instanceOfCreateJournalistDto(value: object): value is CreateJournalistDto {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('mediaName' in value) || value['mediaName'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function CreateJournalistDtoFromJSON(json: any): CreateJournalistDto {
    return CreateJournalistDtoFromJSONTyped(json, false);
}

export function CreateJournalistDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateJournalistDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'mediaName': json['mediaName'],
        'department': json['department'] == null ? undefined : json['department'],
        'position': json['position'] == null ? undefined : json['position'],
        'email': json['email'],
        'landline': json['landline'] == null ? undefined : json['landline'],
        'mobile': json['mobile'] == null ? undefined : json['mobile'],
        'fields': json['fields'] == null ? undefined : json['fields'],
        'address': json['address'] == null ? undefined : json['address'],
        'career': json['career'] == null ? undefined : json['career'],
        'education': json['education'] == null ? undefined : json['education'],
        'writings': json['writings'] == null ? undefined : json['writings'],
        'awards': json['awards'] == null ? undefined : json['awards'],
        'socials': json['socials'] == null ? undefined : ((json['socials'] as Array<any>).map(SocialDtoFromJSON)),
        'jrnlstLists': json['jrnlstLists'] == null ? undefined : json['jrnlstLists'],
    };
}

export function CreateJournalistDtoToJSON(value?: CreateJournalistDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'mediaName': value['mediaName'],
        'department': value['department'],
        'position': value['position'],
        'email': value['email'],
        'landline': value['landline'],
        'mobile': value['mobile'],
        'fields': value['fields'],
        'address': value['address'],
        'career': value['career'],
        'education': value['education'],
        'writings': value['writings'],
        'awards': value['awards'],
        'socials': value['socials'] == null ? undefined : ((value['socials'] as Array<any>).map(SocialDtoToJSON)),
        'jrnlstLists': value['jrnlstLists'],
    };
}

