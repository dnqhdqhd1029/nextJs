/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserDtoForSimple } from './UserDtoForSimple';
import {
    UserDtoForSimpleFromJSON,
    UserDtoForSimpleFromJSONTyped,
    UserDtoForSimpleToJSON,
} from './UserDtoForSimple';

/**
 * 
 * @export
 * @interface MailingForActionDto
 */
export interface MailingForActionDto {
    /**
     * 
     * @type {number}
     * @memberof MailingForActionDto
     */
    mailingId?: number;
    /**
     * 
     * @type {string}
     * @memberof MailingForActionDto
     */
    category?: string;
    /**
     * 배포명
     * @type {string}
     * @memberof MailingForActionDto
     */
    titleForManage?: string;
    /**
     * 즉시 발송 여부
     * @type {boolean}
     * @memberof MailingForActionDto
     */
    sendNow?: boolean;
    /**
     * 나에게 보내기
     * @type {boolean}
     * @memberof MailingForActionDto
     */
    includeUser?: boolean;
    /**
     * 
     * @type {UserDtoForSimple}
     * @memberof MailingForActionDto
     */
    sender?: UserDtoForSimple;
    /**
     * 상태 공통코드 - ACTION_STATE
     * @type {string}
     * @memberof MailingForActionDto
     */
    state?: string;
    /**
     * 실제 발송 시간
     * @type {string}
     * @memberof MailingForActionDto
     */
    startAt?: string;
}

/**
 * Check if a given object implements the MailingForActionDto interface.
 */
export function instanceOfMailingForActionDto(value: object): value is MailingForActionDto {
    return true;
}

export function MailingForActionDtoFromJSON(json: any): MailingForActionDto {
    return MailingForActionDtoFromJSONTyped(json, false);
}

export function MailingForActionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MailingForActionDto {
    if (json == null) {
        return json;
    }
    return {
        
        'mailingId': json['mailingId'] == null ? undefined : json['mailingId'],
        'category': json['category'] == null ? undefined : json['category'],
        'titleForManage': json['titleForManage'] == null ? undefined : json['titleForManage'],
        'sendNow': json['sendNow'] == null ? undefined : json['sendNow'],
        'includeUser': json['includeUser'] == null ? undefined : json['includeUser'],
        'sender': json['sender'] == null ? undefined : UserDtoForSimpleFromJSON(json['sender']),
        'state': json['state'] == null ? undefined : json['state'],
        'startAt': json['startAt'] == null ? undefined : json['startAt'],
    };
}

export function MailingForActionDtoToJSON(value?: MailingForActionDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'mailingId': value['mailingId'],
        'category': value['category'],
        'titleForManage': value['titleForManage'],
        'sendNow': value['sendNow'],
        'includeUser': value['includeUser'],
        'sender': UserDtoForSimpleToJSON(value['sender']),
        'state': value['state'],
        'startAt': value['startAt'],
    };
}

