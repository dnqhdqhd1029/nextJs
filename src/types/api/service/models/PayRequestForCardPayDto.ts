/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PayRequestForCardPayDto
 */
export interface PayRequestForCardPayDto {
    /**
     * 결제요청번호
     * @type {number}
     * @memberof PayRequestForCardPayDto
     */
    payRequestId: number;
    /**
     * 이니시스 결제 응답 결과
     * @type {string}
     * @memberof PayRequestForCardPayDto
     */
    paymentTransactions: string;
    /**
     * 신청인 이메일 주소
     * @type {string}
     * @memberof PayRequestForCardPayDto
     */
    email: string;
    /**
     * 신청인 이름
     * @type {string}
     * @memberof PayRequestForCardPayDto
     */
    userName: string;
    /**
     * 신청인 회사명
     * @type {string}
     * @memberof PayRequestForCardPayDto
     */
    companyName: string;
    /**
     * 결제금액
     * @type {number}
     * @memberof PayRequestForCardPayDto
     */
    amount: number;
    /**
     * 결제하기 화면 진입 시간 - 형태 yyyyMMddHHmmss : 20240903114653
     * @type {string}
     * @memberof PayRequestForCardPayDto
     */
    payViewAt?: string;
}

/**
 * Check if a given object implements the PayRequestForCardPayDto interface.
 */
export function instanceOfPayRequestForCardPayDto(value: object): value is PayRequestForCardPayDto {
    if (!('payRequestId' in value) || value['payRequestId'] === undefined) return false;
    if (!('paymentTransactions' in value) || value['paymentTransactions'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('userName' in value) || value['userName'] === undefined) return false;
    if (!('companyName' in value) || value['companyName'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    return true;
}

export function PayRequestForCardPayDtoFromJSON(json: any): PayRequestForCardPayDto {
    return PayRequestForCardPayDtoFromJSONTyped(json, false);
}

export function PayRequestForCardPayDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PayRequestForCardPayDto {
    if (json == null) {
        return json;
    }
    return {
        
        'payRequestId': json['payRequestId'],
        'paymentTransactions': json['paymentTransactions'],
        'email': json['email'],
        'userName': json['userName'],
        'companyName': json['companyName'],
        'amount': json['amount'],
        'payViewAt': json['payViewAt'] == null ? undefined : json['payViewAt'],
    };
}

export function PayRequestForCardPayDtoToJSON(value?: PayRequestForCardPayDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'payRequestId': value['payRequestId'],
        'paymentTransactions': value['paymentTransactions'],
        'email': value['email'],
        'userName': value['userName'],
        'companyName': value['companyName'],
        'amount': value['amount'],
        'payViewAt': value['payViewAt'],
    };
}

