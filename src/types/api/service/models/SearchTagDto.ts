/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SearchTagDto
 */
export interface SearchTagDto {
    /**
     * 태그 이름
     * @type {string}
     * @memberof SearchTagDto
     */
    name?: string;
    /**
     * 구분값 : NEWS(뉴스) / ACTION(활동) / NEWSWIRE 구분값 
     * @type {string}
     * @memberof SearchTagDto
     */
    category: string;
    /**
     * 그룹 ID
     * @type {number}
     * @memberof SearchTagDto
     */
    groupId: number;
    /**
     * 사용자 ID
     * @type {number}
     * @memberof SearchTagDto
     */
    userId?: number;
    /**
     * 태깅된 개수 조건, 0 : 모두, 1 : 1개이상 태깅된 태그(뉴스 검색시 태그 목록 보여줄때 사용)
     * @type {number}
     * @memberof SearchTagDto
     */
    count?: number;
}

/**
 * Check if a given object implements the SearchTagDto interface.
 */
export function instanceOfSearchTagDto(value: object): value is SearchTagDto {
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('groupId' in value) || value['groupId'] === undefined) return false;
    return true;
}

export function SearchTagDtoFromJSON(json: any): SearchTagDto {
    return SearchTagDtoFromJSONTyped(json, false);
}

export function SearchTagDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchTagDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'category': json['category'],
        'groupId': json['groupId'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'count': json['count'] == null ? undefined : json['count'],
    };
}

export function SearchTagDtoToJSON(value?: SearchTagDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'category': value['category'],
        'groupId': value['groupId'],
        'userId': value['userId'],
        'count': value['count'],
    };
}

