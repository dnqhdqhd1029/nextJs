/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 관련 제품 목록
 * @export
 * @interface ProductDto
 */
export interface ProductDto {
    /**
     * 
     * @type {number}
     * @memberof ProductDto
     */
    productId?: number;
    /**
     * 상품명
     * @type {string}
     * @memberof ProductDto
     */
    name?: string;
    /**
     * 사용구분
     * @type {boolean}
     * @memberof ProductDto
     */
    active?: boolean;
    /**
     * 고정 상품 또는 부가상품 가격. 부가세 제외가임.
     * @type {number}
     * @memberof ProductDto
     */
    price?: number;
    /**
     * 언론인 및 미디어 데이터 사용여부
     * @type {boolean}
     * @memberof ProductDto
     */
    mediaOn?: boolean;
    /**
     * 모니터링 사용여부
     * @type {boolean}
     * @memberof ProductDto
     */
    monitorOn?: boolean;
    /**
     * 프로젝트 사용여부
     * @type {boolean}
     * @memberof ProductDto
     */
    projectOn?: boolean;
    /**
     * 배포 사용여부
     * @type {boolean}
     * @memberof ProductDto
     */
    releaseOn?: boolean;
    /**
     * 뉴스로 언론인 검색 사용여부
     * @type {boolean}
     * @memberof ProductDto
     */
    jrnlstViaNewsOn?: boolean;
    /**
     * 그룹 사용여부
     * @type {boolean}
     * @memberof ProductDto
     */
    groupOn?: boolean;
    /**
     * 뉴스 알리미 사용여부
     * @type {boolean}
     * @memberof ProductDto
     */
    newsNoticeOn?: boolean;
    /**
     * 고객지원 전담자 존재 여부
     * @type {boolean}
     * @memberof ProductDto
     */
    dedicatedSupportOn?: boolean;
    /**
     * 고정 사용자 수
     * @type {number}
     * @memberof ProductDto
     */
    userNum?: number;
    /**
     * 고정 그룹 수
     * @type {number}
     * @memberof ProductDto
     */
    groupNum?: number;
    /**
     * 고정 프로젝트 수
     * @type {number}
     * @memberof ProductDto
     */
    projNum?: number;
    /**
     * 고정 이메일 수
     * @type {number}
     * @memberof ProductDto
     */
    emailNum?: number;
    /**
     * 고정 뉴스와이어 배포 수
     * @type {number}
     * @memberof ProductDto
     */
    nwireNum?: number;
    /**
     * 실시간 뉴스 알리미 하루 수신 횟수
     * @type {number}
     * @memberof ProductDto
     */
    newsNoticeDayLimit?: number;
    /**
     * 일반상품 여부
     * @type {boolean}
     * @memberof ProductDto
     */
    isGeneralProduct?: boolean;
    /**
     * 부사상품 유형 - 공통코드 : ETC_PRODUCT_TYPE
     * @type {string}
     * @memberof ProductDto
     */
    etcProductType?: string;
    /**
     * 상품 코드
     * @type {string}
     * @memberof ProductDto
     */
    productCode?: string;
}

/**
 * Check if a given object implements the ProductDto interface.
 */
export function instanceOfProductDto(value: object): value is ProductDto {
    return true;
}

export function ProductDtoFromJSON(json: any): ProductDto {
    return ProductDtoFromJSONTyped(json, false);
}

export function ProductDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductDto {
    if (json == null) {
        return json;
    }
    return {
        
        'productId': json['productId'] == null ? undefined : json['productId'],
        'name': json['name'] == null ? undefined : json['name'],
        'active': json['active'] == null ? undefined : json['active'],
        'price': json['price'] == null ? undefined : json['price'],
        'mediaOn': json['mediaOn'] == null ? undefined : json['mediaOn'],
        'monitorOn': json['monitorOn'] == null ? undefined : json['monitorOn'],
        'projectOn': json['projectOn'] == null ? undefined : json['projectOn'],
        'releaseOn': json['releaseOn'] == null ? undefined : json['releaseOn'],
        'jrnlstViaNewsOn': json['jrnlstViaNewsOn'] == null ? undefined : json['jrnlstViaNewsOn'],
        'groupOn': json['groupOn'] == null ? undefined : json['groupOn'],
        'newsNoticeOn': json['newsNoticeOn'] == null ? undefined : json['newsNoticeOn'],
        'dedicatedSupportOn': json['dedicatedSupportOn'] == null ? undefined : json['dedicatedSupportOn'],
        'userNum': json['userNum'] == null ? undefined : json['userNum'],
        'groupNum': json['groupNum'] == null ? undefined : json['groupNum'],
        'projNum': json['projNum'] == null ? undefined : json['projNum'],
        'emailNum': json['emailNum'] == null ? undefined : json['emailNum'],
        'nwireNum': json['nwireNum'] == null ? undefined : json['nwireNum'],
        'newsNoticeDayLimit': json['newsNoticeDayLimit'] == null ? undefined : json['newsNoticeDayLimit'],
        'isGeneralProduct': json['isGeneralProduct'] == null ? undefined : json['isGeneralProduct'],
        'etcProductType': json['etcProductType'] == null ? undefined : json['etcProductType'],
        'productCode': json['productCode'] == null ? undefined : json['productCode'],
    };
}

export function ProductDtoToJSON(value?: ProductDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'productId': value['productId'],
        'name': value['name'],
        'active': value['active'],
        'price': value['price'],
        'mediaOn': value['mediaOn'],
        'monitorOn': value['monitorOn'],
        'projectOn': value['projectOn'],
        'releaseOn': value['releaseOn'],
        'jrnlstViaNewsOn': value['jrnlstViaNewsOn'],
        'groupOn': value['groupOn'],
        'newsNoticeOn': value['newsNoticeOn'],
        'dedicatedSupportOn': value['dedicatedSupportOn'],
        'userNum': value['userNum'],
        'groupNum': value['groupNum'],
        'projNum': value['projNum'],
        'emailNum': value['emailNum'],
        'nwireNum': value['nwireNum'],
        'newsNoticeDayLimit': value['newsNoticeDayLimit'],
        'isGeneralProduct': value['isGeneralProduct'],
        'etcProductType': value['etcProductType'],
        'productCode': value['productCode'],
    };
}

