/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserDtoForGroup } from './UserDtoForGroup';
import {
    UserDtoForGroupFromJSON,
    UserDtoForGroupFromJSONTyped,
    UserDtoForGroupToJSON,
} from './UserDtoForGroup';
import type { SocialDto } from './SocialDto';
import {
    SocialDtoFromJSON,
    SocialDtoFromJSONTyped,
    SocialDtoToJSON,
} from './SocialDto';

/**
 * 
 * @export
 * @interface JournalistDto
 */
export interface JournalistDto {
    /**
     * 
     * @type {number}
     * @memberof JournalistDto
     */
    journalistId?: number;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    name?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof JournalistDto
     */
    fieldsByUser?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    department?: string;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    position?: string;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    occupationCode?: string;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    email?: string;
    /**
     * 
     * @type {boolean}
     * @memberof JournalistDto
     */
    isSharedMail?: boolean;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    mobile?: string;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    address?: string;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    education?: string;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    awards?: string;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    career?: string;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    writings?: string;
    /**
     * 
     * @type {boolean}
     * @memberof JournalistDto
     */
    profileOpen?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof JournalistDto
     */
    mobileOpen?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof JournalistDto
     */
    receivePr?: boolean;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    mediaName?: string;
    /**
     * 
     * @type {number}
     * @memberof JournalistDto
     */
    countMedia?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof JournalistDto
     */
    programs?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    emailError?: string;
    /**
     * 
     * @type {boolean}
     * @memberof JournalistDto
     */
    visible?: boolean;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    landline?: string;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    fax?: string;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    photo?: string;
    /**
     * 
     * @type {UserDtoForGroup}
     * @memberof JournalistDto
     */
    updater?: UserDtoForGroup;
    /**
     * 
     * @type {string}
     * @memberof JournalistDto
     */
    cuType?: string;
    /**
     * 
     * @type {Date}
     * @memberof JournalistDto
     */
    regisAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof JournalistDto
     */
    updateAt?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof JournalistDto
     */
    isSysInfo?: boolean;
    /**
     * 
     * @type {Array<SocialDto>}
     * @memberof JournalistDto
     */
    socialDtos?: Array<SocialDto>;
}

/**
 * Check if a given object implements the JournalistDto interface.
 */
export function instanceOfJournalistDto(value: object): value is JournalistDto {
    return true;
}

export function JournalistDtoFromJSON(json: any): JournalistDto {
    return JournalistDtoFromJSONTyped(json, false);
}

export function JournalistDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): JournalistDto {
    if (json == null) {
        return json;
    }
    return {
        
        'journalistId': json['journalistId'] == null ? undefined : json['journalistId'],
        'name': json['name'] == null ? undefined : json['name'],
        'fieldsByUser': json['fieldsByUser'] == null ? undefined : json['fieldsByUser'],
        'department': json['department'] == null ? undefined : json['department'],
        'position': json['position'] == null ? undefined : json['position'],
        'occupationCode': json['occupationCode'] == null ? undefined : json['occupationCode'],
        'email': json['email'] == null ? undefined : json['email'],
        'isSharedMail': json['isSharedMail'] == null ? undefined : json['isSharedMail'],
        'mobile': json['mobile'] == null ? undefined : json['mobile'],
        'address': json['address'] == null ? undefined : json['address'],
        'education': json['education'] == null ? undefined : json['education'],
        'awards': json['awards'] == null ? undefined : json['awards'],
        'career': json['career'] == null ? undefined : json['career'],
        'writings': json['writings'] == null ? undefined : json['writings'],
        'profileOpen': json['profileOpen'] == null ? undefined : json['profileOpen'],
        'mobileOpen': json['mobileOpen'] == null ? undefined : json['mobileOpen'],
        'receivePr': json['receivePr'] == null ? undefined : json['receivePr'],
        'mediaName': json['mediaName'] == null ? undefined : json['mediaName'],
        'countMedia': json['countMedia'] == null ? undefined : json['countMedia'],
        'programs': json['programs'] == null ? undefined : json['programs'],
        'emailError': json['emailError'] == null ? undefined : json['emailError'],
        'visible': json['visible'] == null ? undefined : json['visible'],
        'landline': json['landline'] == null ? undefined : json['landline'],
        'fax': json['fax'] == null ? undefined : json['fax'],
        'photo': json['photo'] == null ? undefined : json['photo'],
        'updater': json['updater'] == null ? undefined : UserDtoForGroupFromJSON(json['updater']),
        'cuType': json['cuType'] == null ? undefined : json['cuType'],
        'regisAt': json['regisAt'] == null ? undefined : (new Date(json['regisAt'])),
        'updateAt': json['updateAt'] == null ? undefined : (new Date(json['updateAt'])),
        'isSysInfo': json['isSysInfo'] == null ? undefined : json['isSysInfo'],
        'socialDtos': json['socialDtos'] == null ? undefined : ((json['socialDtos'] as Array<any>).map(SocialDtoFromJSON)),
    };
}

export function JournalistDtoToJSON(value?: JournalistDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'journalistId': value['journalistId'],
        'name': value['name'],
        'fieldsByUser': value['fieldsByUser'],
        'department': value['department'],
        'position': value['position'],
        'occupationCode': value['occupationCode'],
        'email': value['email'],
        'isSharedMail': value['isSharedMail'],
        'mobile': value['mobile'],
        'address': value['address'],
        'education': value['education'],
        'awards': value['awards'],
        'career': value['career'],
        'writings': value['writings'],
        'profileOpen': value['profileOpen'],
        'mobileOpen': value['mobileOpen'],
        'receivePr': value['receivePr'],
        'mediaName': value['mediaName'],
        'countMedia': value['countMedia'],
        'programs': value['programs'],
        'emailError': value['emailError'],
        'visible': value['visible'],
        'landline': value['landline'],
        'fax': value['fax'],
        'photo': value['photo'],
        'updater': UserDtoForGroupToJSON(value['updater']),
        'cuType': value['cuType'],
        'regisAt': value['regisAt'] == null ? undefined : ((value['regisAt']).toISOString()),
        'updateAt': value['updateAt'] == null ? undefined : ((value['updateAt']).toISOString()),
        'isSysInfo': value['isSysInfo'],
        'socialDtos': value['socialDtos'] == null ? undefined : ((value['socialDtos'] as Array<any>).map(SocialDtoToJSON)),
    };
}

