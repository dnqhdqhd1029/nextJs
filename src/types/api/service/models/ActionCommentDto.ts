/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserDtoForGroup } from './UserDtoForGroup';
import {
    UserDtoForGroupFromJSON,
    UserDtoForGroupFromJSONTyped,
    UserDtoForGroupToJSON,
} from './UserDtoForGroup';

/**
 * 
 * @export
 * @interface ActionCommentDto
 */
export interface ActionCommentDto {
    /**
     * 
     * @type {number}
     * @memberof ActionCommentDto
     */
    actionCommentId?: number;
    /**
     * 
     * @type {string}
     * @memberof ActionCommentDto
     */
    content?: string;
    /**
     * 
     * @type {string}
     * @memberof ActionCommentDto
     */
    regisAt?: string;
    /**
     * 
     * @type {string}
     * @memberof ActionCommentDto
     */
    updateAt?: string;
    /**
     * 
     * @type {UserDtoForGroup}
     * @memberof ActionCommentDto
     */
    register?: UserDtoForGroup;
    /**
     * 
     * @type {UserDtoForGroup}
     * @memberof ActionCommentDto
     */
    updater?: UserDtoForGroup;
}

/**
 * Check if a given object implements the ActionCommentDto interface.
 */
export function instanceOfActionCommentDto(value: object): value is ActionCommentDto {
    return true;
}

export function ActionCommentDtoFromJSON(json: any): ActionCommentDto {
    return ActionCommentDtoFromJSONTyped(json, false);
}

export function ActionCommentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActionCommentDto {
    if (json == null) {
        return json;
    }
    return {
        
        'actionCommentId': json['actionCommentId'] == null ? undefined : json['actionCommentId'],
        'content': json['content'] == null ? undefined : json['content'],
        'regisAt': json['regisAt'] == null ? undefined : json['regisAt'],
        'updateAt': json['updateAt'] == null ? undefined : json['updateAt'],
        'register': json['register'] == null ? undefined : UserDtoForGroupFromJSON(json['register']),
        'updater': json['updater'] == null ? undefined : UserDtoForGroupFromJSON(json['updater']),
    };
}

export function ActionCommentDtoToJSON(value?: ActionCommentDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'actionCommentId': value['actionCommentId'],
        'content': value['content'],
        'regisAt': value['regisAt'],
        'updateAt': value['updateAt'],
        'register': UserDtoForGroupToJSON(value['register']),
        'updater': UserDtoForGroupToJSON(value['updater']),
    };
}

