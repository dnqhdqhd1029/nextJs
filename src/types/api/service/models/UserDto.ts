/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GroupDtoForUser } from './GroupDtoForUser';
import {
    GroupDtoForUserFromJSON,
    GroupDtoForUserFromJSONTyped,
    GroupDtoForUserToJSON,
} from './GroupDtoForUser';
import type { CompanySimpleDto } from './CompanySimpleDto';
import {
    CompanySimpleDtoFromJSON,
    CompanySimpleDtoFromJSONTyped,
    CompanySimpleDtoToJSON,
} from './CompanySimpleDto';

/**
 * 
 * @export
 * @interface UserDto
 */
export interface UserDto {
    /**
     * 
     * @type {number}
     * @memberof UserDto
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    mobile?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    phone?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    nickname?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    displayName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    stateCode?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    role?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    department?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    position?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    timezone?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    landingPage?: string;
    /**
     * 
     * @type {number}
     * @memberof UserDto
     */
    selectedGroupId?: number;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    dashboardLayout?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserDto
     */
    receiveLetter?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    regisAt?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    lastLoginAt?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    passwdChangeAt?: string;
    /**
     * 
     * @type {CompanySimpleDto}
     * @memberof UserDto
     */
    company?: CompanySimpleDto;
    /**
     * 
     * @type {Array<GroupDtoForUser>}
     * @memberof UserDto
     */
    groups?: Array<GroupDtoForUser>;
}

/**
 * Check if a given object implements the UserDto interface.
 */
export function instanceOfUserDto(value: object): value is UserDto {
    return true;
}

export function UserDtoFromJSON(json: any): UserDto {
    return UserDtoFromJSONTyped(json, false);
}

export function UserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['userId'] == null ? undefined : json['userId'],
        'name': json['name'] == null ? undefined : json['name'],
        'email': json['email'] == null ? undefined : json['email'],
        'mobile': json['mobile'] == null ? undefined : json['mobile'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'displayName': json['displayName'] == null ? undefined : json['displayName'],
        'stateCode': json['stateCode'] == null ? undefined : json['stateCode'],
        'role': json['role'] == null ? undefined : json['role'],
        'department': json['department'] == null ? undefined : json['department'],
        'position': json['position'] == null ? undefined : json['position'],
        'timezone': json['timezone'] == null ? undefined : json['timezone'],
        'landingPage': json['landingPage'] == null ? undefined : json['landingPage'],
        'selectedGroupId': json['selectedGroupId'] == null ? undefined : json['selectedGroupId'],
        'dashboardLayout': json['dashboardLayout'] == null ? undefined : json['dashboardLayout'],
        'receiveLetter': json['receiveLetter'] == null ? undefined : json['receiveLetter'],
        'regisAt': json['regisAt'] == null ? undefined : json['regisAt'],
        'lastLoginAt': json['lastLoginAt'] == null ? undefined : json['lastLoginAt'],
        'passwdChangeAt': json['passwdChangeAt'] == null ? undefined : json['passwdChangeAt'],
        'company': json['company'] == null ? undefined : CompanySimpleDtoFromJSON(json['company']),
        'groups': json['groups'] == null ? undefined : ((json['groups'] as Array<any>).map(GroupDtoForUserFromJSON)),
    };
}

export function UserDtoToJSON(value?: UserDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'userId': value['userId'],
        'name': value['name'],
        'email': value['email'],
        'mobile': value['mobile'],
        'phone': value['phone'],
        'nickname': value['nickname'],
        'displayName': value['displayName'],
        'stateCode': value['stateCode'],
        'role': value['role'],
        'department': value['department'],
        'position': value['position'],
        'timezone': value['timezone'],
        'landingPage': value['landingPage'],
        'selectedGroupId': value['selectedGroupId'],
        'dashboardLayout': value['dashboardLayout'],
        'receiveLetter': value['receiveLetter'],
        'regisAt': value['regisAt'],
        'lastLoginAt': value['lastLoginAt'],
        'passwdChangeAt': value['passwdChangeAt'],
        'company': CompanySimpleDtoToJSON(value['company']),
        'groups': value['groups'] == null ? undefined : ((value['groups'] as Array<any>).map(GroupDtoForUserToJSON)),
    };
}

