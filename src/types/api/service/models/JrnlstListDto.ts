/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserDtoForSimple } from './UserDtoForSimple';
import {
    UserDtoForSimpleFromJSON,
    UserDtoForSimpleFromJSONTyped,
    UserDtoForSimpleToJSON,
} from './UserDtoForSimple';

/**
 * 
 * @export
 * @interface JrnlstListDto
 */
export interface JrnlstListDto {
    /**
     * 
     * @type {number}
     * @memberof JrnlstListDto
     */
    jrnlstListId?: number;
    /**
     * 
     * @type {string}
     * @memberof JrnlstListDto
     */
    title?: string;
    /**
     * 
     * @type {number}
     * @memberof JrnlstListDto
     */
    groupId?: number;
    /**
     * 
     * @type {number}
     * @memberof JrnlstListDto
     */
    projectId?: number;
    /**
     * 
     * @type {string}
     * @memberof JrnlstListDto
     */
    shareCode?: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof JrnlstListDto
     */
    journalist?: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof JrnlstListDto
     */
    journalistCount?: number;
    /**
     * 
     * @type {UserDtoForSimple}
     * @memberof JrnlstListDto
     */
    cuUser?: UserDtoForSimple;
    /**
     * 
     * @type {string}
     * @memberof JrnlstListDto
     */
    cuType?: string;
    /**
     * 
     * @type {Date}
     * @memberof JrnlstListDto
     */
    regisAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof JrnlstListDto
     */
    updateAt?: Date;
    /**
     * 
     * @type {UserDtoForSimple}
     * @memberof JrnlstListDto
     */
    owner?: UserDtoForSimple;
    /**
     * 
     * @type {UserDtoForSimple}
     * @memberof JrnlstListDto
     */
    register?: UserDtoForSimple;
    /**
     * 
     * @type {UserDtoForSimple}
     * @memberof JrnlstListDto
     */
    updater?: UserDtoForSimple;
}

/**
 * Check if a given object implements the JrnlstListDto interface.
 */
export function instanceOfJrnlstListDto(value: object): value is JrnlstListDto {
    return true;
}

export function JrnlstListDtoFromJSON(json: any): JrnlstListDto {
    return JrnlstListDtoFromJSONTyped(json, false);
}

export function JrnlstListDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): JrnlstListDto {
    if (json == null) {
        return json;
    }
    return {
        
        'jrnlstListId': json['jrnlstListId'] == null ? undefined : json['jrnlstListId'],
        'title': json['title'] == null ? undefined : json['title'],
        'groupId': json['groupId'] == null ? undefined : json['groupId'],
        'projectId': json['projectId'] == null ? undefined : json['projectId'],
        'shareCode': json['shareCode'] == null ? undefined : json['shareCode'],
        'journalist': json['journalist'] == null ? undefined : json['journalist'],
        'journalistCount': json['journalistCount'] == null ? undefined : json['journalistCount'],
        'cuUser': json['cuUser'] == null ? undefined : UserDtoForSimpleFromJSON(json['cuUser']),
        'cuType': json['cuType'] == null ? undefined : json['cuType'],
        'regisAt': json['regisAt'] == null ? undefined : (new Date(json['regisAt'])),
        'updateAt': json['updateAt'] == null ? undefined : (new Date(json['updateAt'])),
        'owner': json['owner'] == null ? undefined : UserDtoForSimpleFromJSON(json['owner']),
        'register': json['register'] == null ? undefined : UserDtoForSimpleFromJSON(json['register']),
        'updater': json['updater'] == null ? undefined : UserDtoForSimpleFromJSON(json['updater']),
    };
}

export function JrnlstListDtoToJSON(value?: JrnlstListDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'jrnlstListId': value['jrnlstListId'],
        'title': value['title'],
        'groupId': value['groupId'],
        'projectId': value['projectId'],
        'shareCode': value['shareCode'],
        'journalist': value['journalist'],
        'journalistCount': value['journalistCount'],
        'cuUser': UserDtoForSimpleToJSON(value['cuUser']),
        'cuType': value['cuType'],
        'regisAt': value['regisAt'] == null ? undefined : ((value['regisAt']).toISOString()),
        'updateAt': value['updateAt'] == null ? undefined : ((value['updateAt']).toISOString()),
        'owner': UserDtoForSimpleToJSON(value['owner']),
        'register': UserDtoForSimpleToJSON(value['register']),
        'updater': UserDtoForSimpleToJSON(value['updater']),
    };
}

