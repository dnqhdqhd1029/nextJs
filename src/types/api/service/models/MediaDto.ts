/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserDtoForSimple } from './UserDtoForSimple';
import {
    UserDtoForSimpleFromJSON,
    UserDtoForSimpleFromJSONTyped,
    UserDtoForSimpleToJSON,
} from './UserDtoForSimple';
import type { FieldDto } from './FieldDto';
import {
    FieldDtoFromJSON,
    FieldDtoFromJSONTyped,
    FieldDtoToJSON,
} from './FieldDto';

/**
 * 
 * @export
 * @interface MediaDto
 */
export interface MediaDto {
    /**
     * 
     * @type {number}
     * @memberof MediaDto
     */
    mediaId?: number;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    categCode?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    subcategCode?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    languageCode?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    mediaGrp?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    alias?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    fax?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    landline?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    address?: string;
    /**
     * 
     * @type {UserDtoForSimple}
     * @memberof MediaDto
     */
    updater?: UserDtoForSimple;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    cuType?: string;
    /**
     * 
     * @type {Date}
     * @memberof MediaDto
     */
    regisAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof MediaDto
     */
    updateAt?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof MediaDto
     */
    portalsCode?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof MediaDto
     */
    price?: number;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    pubCycleCode?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    publisher?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    wsite?: string;
    /**
     * 
     * @type {boolean}
     * @memberof MediaDto
     */
    jrnlstNameRevealed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MediaDto
     */
    isSysInfo?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof MediaDto
     */
    fieldsByUser?: Array<string>;
    /**
     * 
     * @type {Array<FieldDto>}
     * @memberof MediaDto
     */
    fields?: Array<FieldDto>;
}

/**
 * Check if a given object implements the MediaDto interface.
 */
export function instanceOfMediaDto(value: object): value is MediaDto {
    return true;
}

export function MediaDtoFromJSON(json: any): MediaDto {
    return MediaDtoFromJSONTyped(json, false);
}

export function MediaDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaDto {
    if (json == null) {
        return json;
    }
    return {
        
        'mediaId': json['mediaId'] == null ? undefined : json['mediaId'],
        'categCode': json['categCode'] == null ? undefined : json['categCode'],
        'subcategCode': json['subcategCode'] == null ? undefined : json['subcategCode'],
        'description': json['description'] == null ? undefined : json['description'],
        'email': json['email'] == null ? undefined : json['email'],
        'languageCode': json['languageCode'] == null ? undefined : json['languageCode'],
        'mediaGrp': json['mediaGrp'] == null ? undefined : json['mediaGrp'],
        'name': json['name'] == null ? undefined : json['name'],
        'alias': json['alias'] == null ? undefined : json['alias'],
        'fax': json['fax'] == null ? undefined : json['fax'],
        'landline': json['landline'] == null ? undefined : json['landline'],
        'address': json['address'] == null ? undefined : json['address'],
        'updater': json['updater'] == null ? undefined : UserDtoForSimpleFromJSON(json['updater']),
        'cuType': json['cuType'] == null ? undefined : json['cuType'],
        'regisAt': json['regisAt'] == null ? undefined : (new Date(json['regisAt'])),
        'updateAt': json['updateAt'] == null ? undefined : (new Date(json['updateAt'])),
        'portalsCode': json['portalsCode'] == null ? undefined : json['portalsCode'],
        'price': json['price'] == null ? undefined : json['price'],
        'pubCycleCode': json['pubCycleCode'] == null ? undefined : json['pubCycleCode'],
        'publisher': json['publisher'] == null ? undefined : json['publisher'],
        'wsite': json['wsite'] == null ? undefined : json['wsite'],
        'jrnlstNameRevealed': json['jrnlstNameRevealed'] == null ? undefined : json['jrnlstNameRevealed'],
        'isSysInfo': json['isSysInfo'] == null ? undefined : json['isSysInfo'],
        'fieldsByUser': json['fieldsByUser'] == null ? undefined : json['fieldsByUser'],
        'fields': json['fields'] == null ? undefined : ((json['fields'] as Array<any>).map(FieldDtoFromJSON)),
    };
}

export function MediaDtoToJSON(value?: MediaDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'mediaId': value['mediaId'],
        'categCode': value['categCode'],
        'subcategCode': value['subcategCode'],
        'description': value['description'],
        'email': value['email'],
        'languageCode': value['languageCode'],
        'mediaGrp': value['mediaGrp'],
        'name': value['name'],
        'alias': value['alias'],
        'fax': value['fax'],
        'landline': value['landline'],
        'address': value['address'],
        'updater': UserDtoForSimpleToJSON(value['updater']),
        'cuType': value['cuType'],
        'regisAt': value['regisAt'] == null ? undefined : ((value['regisAt']).toISOString()),
        'updateAt': value['updateAt'] == null ? undefined : ((value['updateAt']).toISOString()),
        'portalsCode': value['portalsCode'],
        'price': value['price'],
        'pubCycleCode': value['pubCycleCode'],
        'publisher': value['publisher'],
        'wsite': value['wsite'],
        'jrnlstNameRevealed': value['jrnlstNameRevealed'],
        'isSysInfo': value['isSysInfo'],
        'fieldsByUser': value['fieldsByUser'],
        'fields': value['fields'] == null ? undefined : ((value['fields'] as Array<any>).map(FieldDtoToJSON)),
    };
}

