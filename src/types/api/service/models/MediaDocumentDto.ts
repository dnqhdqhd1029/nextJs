/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MediaUserDto } from './MediaUserDto';
import {
    MediaUserDtoFromJSON,
    MediaUserDtoFromJSONTyped,
    MediaUserDtoToJSON,
} from './MediaUserDto';
import type { IdTitleDto } from './IdTitleDto';
import {
    IdTitleDtoFromJSON,
    IdTitleDtoFromJSONTyped,
    IdTitleDtoToJSON,
} from './IdTitleDto';
import type { ESearchMediaOwner } from './ESearchMediaOwner';
import {
    ESearchMediaOwnerFromJSON,
    ESearchMediaOwnerFromJSONTyped,
    ESearchMediaOwnerToJSON,
} from './ESearchMediaOwner';

/**
 * 
 * @export
 * @interface MediaDocumentDto
 */
export interface MediaDocumentDto {
    /**
     * 
     * @type {number}
     * @memberof MediaDocumentDto
     */
    mid?: number;
    /**
     * 
     * @type {string}
     * @memberof MediaDocumentDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDocumentDto
     */
    language?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDocumentDto
     */
    pub_cycle?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDocumentDto
     */
    logo?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDocumentDto
     */
    publisher?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDocumentDto
     */
    publisher_type_code?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDocumentDto
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDocumentDto
     */
    subtype?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDocumentDto
     */
    group?: string;
    /**
     * 
     * @type {boolean}
     * @memberof MediaDocumentDto
     */
    isSysInfo?: boolean;
    /**
     * 
     * @type {object}
     * @memberof MediaDocumentDto
     */
    coverage?: object;
    /**
     * 
     * @type {object}
     * @memberof MediaDocumentDto
     */
    values?: object;
    /**
     * 
     * @type {object}
     * @memberof MediaDocumentDto
     */
    contacts?: object;
    /**
     * 
     * @type {object}
     * @memberof MediaDocumentDto
     */
    website?: object;
    /**
     * 
     * @type {object}
     * @memberof MediaDocumentDto
     */
    portals?: object;
    /**
     * 
     * @type {string}
     * @memberof MediaDocumentDto
     */
    desc?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDocumentDto
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDocumentDto
     */
    phone?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDocumentDto
     */
    fax?: string;
    /**
     * 
     * @type {ESearchMediaOwner}
     * @memberof MediaDocumentDto
     */
    owner?: ESearchMediaOwner;
    /**
     * 
     * @type {MediaUserDto}
     * @memberof MediaDocumentDto
     */
    mediaUserDto?: MediaUserDto;
    /**
     * 
     * @type {Array<IdTitleDto>}
     * @memberof MediaDocumentDto
     */
    mediaListList?: Array<IdTitleDto>;
}

/**
 * Check if a given object implements the MediaDocumentDto interface.
 */
export function instanceOfMediaDocumentDto(value: object): value is MediaDocumentDto {
    return true;
}

export function MediaDocumentDtoFromJSON(json: any): MediaDocumentDto {
    return MediaDocumentDtoFromJSONTyped(json, false);
}

export function MediaDocumentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaDocumentDto {
    if (json == null) {
        return json;
    }
    return {
        
        'mid': json['mid'] == null ? undefined : json['mid'],
        'name': json['name'] == null ? undefined : json['name'],
        'language': json['language'] == null ? undefined : json['language'],
        'pub_cycle': json['pub_cycle'] == null ? undefined : json['pub_cycle'],
        'logo': json['logo'] == null ? undefined : json['logo'],
        'publisher': json['publisher'] == null ? undefined : json['publisher'],
        'publisher_type_code': json['publisher_type_code'] == null ? undefined : json['publisher_type_code'],
        'type': json['type'] == null ? undefined : json['type'],
        'subtype': json['subtype'] == null ? undefined : json['subtype'],
        'group': json['group'] == null ? undefined : json['group'],
        'isSysInfo': json['isSysInfo'] == null ? undefined : json['isSysInfo'],
        'coverage': json['coverage'] == null ? undefined : json['coverage'],
        'values': json['values'] == null ? undefined : json['values'],
        'contacts': json['contacts'] == null ? undefined : json['contacts'],
        'website': json['website'] == null ? undefined : json['website'],
        'portals': json['portals'] == null ? undefined : json['portals'],
        'desc': json['desc'] == null ? undefined : json['desc'],
        'email': json['email'] == null ? undefined : json['email'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'fax': json['fax'] == null ? undefined : json['fax'],
        'owner': json['owner'] == null ? undefined : ESearchMediaOwnerFromJSON(json['owner']),
        'mediaUserDto': json['mediaUserDto'] == null ? undefined : MediaUserDtoFromJSON(json['mediaUserDto']),
        'mediaListList': json['mediaListList'] == null ? undefined : ((json['mediaListList'] as Array<any>).map(IdTitleDtoFromJSON)),
    };
}

export function MediaDocumentDtoToJSON(value?: MediaDocumentDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'mid': value['mid'],
        'name': value['name'],
        'language': value['language'],
        'pub_cycle': value['pub_cycle'],
        'logo': value['logo'],
        'publisher': value['publisher'],
        'publisher_type_code': value['publisher_type_code'],
        'type': value['type'],
        'subtype': value['subtype'],
        'group': value['group'],
        'isSysInfo': value['isSysInfo'],
        'coverage': value['coverage'],
        'values': value['values'],
        'contacts': value['contacts'],
        'website': value['website'],
        'portals': value['portals'],
        'desc': value['desc'],
        'email': value['email'],
        'phone': value['phone'],
        'fax': value['fax'],
        'owner': ESearchMediaOwnerToJSON(value['owner']),
        'mediaUserDto': MediaUserDtoToJSON(value['mediaUserDto']),
        'mediaListList': value['mediaListList'] == null ? undefined : ((value['mediaListList'] as Array<any>).map(IdTitleDtoToJSON)),
    };
}

