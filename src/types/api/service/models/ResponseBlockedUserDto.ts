/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResponseBlockedUserDto
 */
export interface ResponseBlockedUserDto {
    /**
     * from Email
     * @type {string}
     * @memberof ResponseBlockedUserDto
     */
    from?: string;
    /**
     * to Email
     * @type {string}
     * @memberof ResponseBlockedUserDto
     */
    to?: string;
    /**
     * mailing receive key 
     * @type {number}
     * @memberof ResponseBlockedUserDto
     */
    mailRcvId?: number;
    /**
     * journalist ID
     * @type {number}
     * @memberof ResponseBlockedUserDto
     */
    journalistId?: number;
    /**
     * media ID
     * @type {number}
     * @memberof ResponseBlockedUserDto
     */
    mediaId?: number;
}

/**
 * Check if a given object implements the ResponseBlockedUserDto interface.
 */
export function instanceOfResponseBlockedUserDto(value: object): value is ResponseBlockedUserDto {
    return true;
}

export function ResponseBlockedUserDtoFromJSON(json: any): ResponseBlockedUserDto {
    return ResponseBlockedUserDtoFromJSONTyped(json, false);
}

export function ResponseBlockedUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseBlockedUserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'from': json['from'] == null ? undefined : json['from'],
        'to': json['to'] == null ? undefined : json['to'],
        'mailRcvId': json['mailRcvId'] == null ? undefined : json['mailRcvId'],
        'journalistId': json['journalistId'] == null ? undefined : json['journalistId'],
        'mediaId': json['mediaId'] == null ? undefined : json['mediaId'],
    };
}

export function ResponseBlockedUserDtoToJSON(value?: ResponseBlockedUserDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'from': value['from'],
        'to': value['to'],
        'mailRcvId': value['mailRcvId'],
        'journalistId': value['journalistId'],
        'mediaId': value['mediaId'],
    };
}

