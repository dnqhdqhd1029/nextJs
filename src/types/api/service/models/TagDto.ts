/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserDtoForGroup } from './UserDtoForGroup';
import {
    UserDtoForGroupFromJSON,
    UserDtoForGroupFromJSONTyped,
    UserDtoForGroupToJSON,
} from './UserDtoForGroup';

/**
 * 
 * @export
 * @interface TagDto
 */
export interface TagDto {
    /**
     * 
     * @type {number}
     * @memberof TagDto
     */
    tagId?: number;
    /**
     * 
     * @type {string}
     * @memberof TagDto
     */
    category?: string;
    /**
     * 
     * @type {string}
     * @memberof TagDto
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof TagDto
     */
    groupId?: number;
    /**
     * 
     * @type {number}
     * @memberof TagDto
     */
    companyId?: number;
    /**
     * 
     * @type {string}
     * @memberof TagDto
     */
    cuDate?: string;
    /**
     * 
     * @type {string}
     * @memberof TagDto
     */
    cuType?: string;
    /**
     * 
     * @type {number}
     * @memberof TagDto
     */
    count?: number;
    /**
     * 
     * @type {UserDtoForGroup}
     * @memberof TagDto
     */
    register?: UserDtoForGroup;
    /**
     * 
     * @type {UserDtoForGroup}
     * @memberof TagDto
     */
    updater?: UserDtoForGroup;
}

/**
 * Check if a given object implements the TagDto interface.
 */
export function instanceOfTagDto(value: object): value is TagDto {
    return true;
}

export function TagDtoFromJSON(json: any): TagDto {
    return TagDtoFromJSONTyped(json, false);
}

export function TagDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TagDto {
    if (json == null) {
        return json;
    }
    return {
        
        'tagId': json['tagId'] == null ? undefined : json['tagId'],
        'category': json['category'] == null ? undefined : json['category'],
        'name': json['name'] == null ? undefined : json['name'],
        'groupId': json['groupId'] == null ? undefined : json['groupId'],
        'companyId': json['companyId'] == null ? undefined : json['companyId'],
        'cuDate': json['cuDate'] == null ? undefined : json['cuDate'],
        'cuType': json['cuType'] == null ? undefined : json['cuType'],
        'count': json['count'] == null ? undefined : json['count'],
        'register': json['register'] == null ? undefined : UserDtoForGroupFromJSON(json['register']),
        'updater': json['updater'] == null ? undefined : UserDtoForGroupFromJSON(json['updater']),
    };
}

export function TagDtoToJSON(value?: TagDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'tagId': value['tagId'],
        'category': value['category'],
        'name': value['name'],
        'groupId': value['groupId'],
        'companyId': value['companyId'],
        'cuDate': value['cuDate'],
        'cuType': value['cuType'],
        'count': value['count'],
        'register': UserDtoForGroupToJSON(value['register']),
        'updater': UserDtoForGroupToJSON(value['updater']),
    };
}

