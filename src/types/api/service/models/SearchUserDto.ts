/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SearchUserDto
 */
export interface SearchUserDto {
    /**
     * 이름 검색
     * @type {string}
     * @memberof SearchUserDto
     */
    name?: string;
    /**
     * 닉네임 검색
     * @type {string}
     * @memberof SearchUserDto
     */
    nickname?: string;
    /**
     * 표시 이름 검색
     * @type {string}
     * @memberof SearchUserDto
     */
    displayName?: string;
    /**
     * 이메일 검색
     * @type {string}
     * @memberof SearchUserDto
     */
    email?: string;
    /**
     * 권한 검색(ADMIN/USER)
     * @type {string}
     * @memberof SearchUserDto
     */
    role?: string;
    /**
     * 상태 검색(ACTIVE/INACTIVE/LOCKED/UNCERTIFIED
     * @type {string}
     * @memberof SearchUserDto
     */
    stateCode?: string;
    /**
     * 이름/표시이름/이메일 모두 검색
     * @type {string}
     * @memberof SearchUserDto
     */
    keyword?: string;
}

/**
 * Check if a given object implements the SearchUserDto interface.
 */
export function instanceOfSearchUserDto(value: object): value is SearchUserDto {
    return true;
}

export function SearchUserDtoFromJSON(json: any): SearchUserDto {
    return SearchUserDtoFromJSONTyped(json, false);
}

export function SearchUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchUserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'displayName': json['displayName'] == null ? undefined : json['displayName'],
        'email': json['email'] == null ? undefined : json['email'],
        'role': json['role'] == null ? undefined : json['role'],
        'stateCode': json['stateCode'] == null ? undefined : json['stateCode'],
        'keyword': json['keyword'] == null ? undefined : json['keyword'],
    };
}

export function SearchUserDtoToJSON(value?: SearchUserDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'nickname': value['nickname'],
        'displayName': value['displayName'],
        'email': value['email'],
        'role': value['role'],
        'stateCode': value['stateCode'],
        'keyword': value['keyword'],
    };
}

