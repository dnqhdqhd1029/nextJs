/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateInquiryForNoUserDto
 */
export interface CreateInquiryForNoUserDto {
    /**
     * 유형*, 공통코드(비회원용) : INQUIRY_WHY_CODE_NOTUSER 
     * @type {string}
     * @memberof CreateInquiryForNoUserDto
     */
    whyCode: string;
    /**
     * 이름* 
     * @type {string}
     * @memberof CreateInquiryForNoUserDto
     */
    name: string;
    /**
     * 이메일* 
     * @type {string}
     * @memberof CreateInquiryForNoUserDto
     */
    email: string;
    /**
     * 전화 
     * @type {string}
     * @memberof CreateInquiryForNoUserDto
     */
    phone?: string;
    /**
     * 휴대전화 
     * @type {string}
     * @memberof CreateInquiryForNoUserDto
     */
    mobile?: string;
    /**
     * 회사명 
     * @type {string}
     * @memberof CreateInquiryForNoUserDto
     */
    companyName?: string;
    /**
     * 제목* 
     * @type {string}
     * @memberof CreateInquiryForNoUserDto
     */
    title: string;
    /**
     * 내용* 
     * @type {string}
     * @memberof CreateInquiryForNoUserDto
     */
    content: string;
}

/**
 * Check if a given object implements the CreateInquiryForNoUserDto interface.
 */
export function instanceOfCreateInquiryForNoUserDto(value: object): value is CreateInquiryForNoUserDto {
    if (!('whyCode' in value) || value['whyCode'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    return true;
}

export function CreateInquiryForNoUserDtoFromJSON(json: any): CreateInquiryForNoUserDto {
    return CreateInquiryForNoUserDtoFromJSONTyped(json, false);
}

export function CreateInquiryForNoUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateInquiryForNoUserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'whyCode': json['whyCode'],
        'name': json['name'],
        'email': json['email'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'mobile': json['mobile'] == null ? undefined : json['mobile'],
        'companyName': json['companyName'] == null ? undefined : json['companyName'],
        'title': json['title'],
        'content': json['content'],
    };
}

export function CreateInquiryForNoUserDtoToJSON(value?: CreateInquiryForNoUserDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'whyCode': value['whyCode'],
        'name': value['name'],
        'email': value['email'],
        'phone': value['phone'],
        'mobile': value['mobile'],
        'companyName': value['companyName'],
        'title': value['title'],
        'content': value['content'],
    };
}

