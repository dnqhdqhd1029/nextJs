/* tslint:disable */
/* eslint-disable */
/**
 * MediaBee Service API
 * MediaBee Service API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NewsDocumentDto } from './NewsDocumentDto';
import {
    NewsDocumentDtoFromJSON,
    NewsDocumentDtoFromJSONTyped,
    NewsDocumentDtoToJSON,
} from './NewsDocumentDto';

/**
 * 
 * @export
 * @interface ElasticSearchReturnDtoNewsDocumentDto
 */
export interface ElasticSearchReturnDtoNewsDocumentDto {
    /**
     * 
     * @type {Array<NewsDocumentDto>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    name?: Array<NewsDocumentDto>;
    /**
     * 
     * @type {number}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    totalElements?: number;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterCategory?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterLocation?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterMediaCategory?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterMediaLocation?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterCategoryFull?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterLocationFull?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterMediaCategoryFull?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterMediaLocationFull?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterType?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterSubtype?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterOccupation?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterMediaName?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterMediaId?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterSocial?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterPubCycle?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterPortal?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterImage?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterVideo?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterMultimedia?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterSourceType?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterTone?: Array<{ [key: string]: object; }>;
    /**
     * 
     * @type {Array<{ [key: string]: object; }>}
     * @memberof ElasticSearchReturnDtoNewsDocumentDto
     */
    filterDate?: Array<{ [key: string]: object; }>;
}

/**
 * Check if a given object implements the ElasticSearchReturnDtoNewsDocumentDto interface.
 */
export function instanceOfElasticSearchReturnDtoNewsDocumentDto(value: object): value is ElasticSearchReturnDtoNewsDocumentDto {
    return true;
}

export function ElasticSearchReturnDtoNewsDocumentDtoFromJSON(json: any): ElasticSearchReturnDtoNewsDocumentDto {
    return ElasticSearchReturnDtoNewsDocumentDtoFromJSONTyped(json, false);
}

export function ElasticSearchReturnDtoNewsDocumentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ElasticSearchReturnDtoNewsDocumentDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : ((json['name'] as Array<any>).map(NewsDocumentDtoFromJSON)),
        'totalElements': json['totalElements'] == null ? undefined : json['totalElements'],
        'filterCategory': json['filterCategory'] == null ? undefined : json['filterCategory'],
        'filterLocation': json['filterLocation'] == null ? undefined : json['filterLocation'],
        'filterMediaCategory': json['filterMediaCategory'] == null ? undefined : json['filterMediaCategory'],
        'filterMediaLocation': json['filterMediaLocation'] == null ? undefined : json['filterMediaLocation'],
        'filterCategoryFull': json['filterCategoryFull'] == null ? undefined : json['filterCategoryFull'],
        'filterLocationFull': json['filterLocationFull'] == null ? undefined : json['filterLocationFull'],
        'filterMediaCategoryFull': json['filterMediaCategoryFull'] == null ? undefined : json['filterMediaCategoryFull'],
        'filterMediaLocationFull': json['filterMediaLocationFull'] == null ? undefined : json['filterMediaLocationFull'],
        'filterType': json['filterType'] == null ? undefined : json['filterType'],
        'filterSubtype': json['filterSubtype'] == null ? undefined : json['filterSubtype'],
        'filterOccupation': json['filterOccupation'] == null ? undefined : json['filterOccupation'],
        'filterMediaName': json['filterMediaName'] == null ? undefined : json['filterMediaName'],
        'filterMediaId': json['filterMediaId'] == null ? undefined : json['filterMediaId'],
        'filterSocial': json['filterSocial'] == null ? undefined : json['filterSocial'],
        'filterPubCycle': json['filterPubCycle'] == null ? undefined : json['filterPubCycle'],
        'filterPortal': json['filterPortal'] == null ? undefined : json['filterPortal'],
        'filterImage': json['filterImage'] == null ? undefined : json['filterImage'],
        'filterVideo': json['filterVideo'] == null ? undefined : json['filterVideo'],
        'filterMultimedia': json['filterMultimedia'] == null ? undefined : json['filterMultimedia'],
        'filterSourceType': json['filterSourceType'] == null ? undefined : json['filterSourceType'],
        'filterTone': json['filterTone'] == null ? undefined : json['filterTone'],
        'filterDate': json['filterDate'] == null ? undefined : json['filterDate'],
    };
}

export function ElasticSearchReturnDtoNewsDocumentDtoToJSON(value?: ElasticSearchReturnDtoNewsDocumentDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'] == null ? undefined : ((value['name'] as Array<any>).map(NewsDocumentDtoToJSON)),
        'totalElements': value['totalElements'],
        'filterCategory': value['filterCategory'],
        'filterLocation': value['filterLocation'],
        'filterMediaCategory': value['filterMediaCategory'],
        'filterMediaLocation': value['filterMediaLocation'],
        'filterCategoryFull': value['filterCategoryFull'],
        'filterLocationFull': value['filterLocationFull'],
        'filterMediaCategoryFull': value['filterMediaCategoryFull'],
        'filterMediaLocationFull': value['filterMediaLocationFull'],
        'filterType': value['filterType'],
        'filterSubtype': value['filterSubtype'],
        'filterOccupation': value['filterOccupation'],
        'filterMediaName': value['filterMediaName'],
        'filterMediaId': value['filterMediaId'],
        'filterSocial': value['filterSocial'],
        'filterPubCycle': value['filterPubCycle'],
        'filterPortal': value['filterPortal'],
        'filterImage': value['filterImage'],
        'filterVideo': value['filterVideo'],
        'filterMultimedia': value['filterMultimedia'],
        'filterSourceType': value['filterSourceType'],
        'filterTone': value['filterTone'],
        'filterDate': value['filterDate'],
    };
}

